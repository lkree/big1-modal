{"version":3,"sources":["Components/interfaces.ts","Utils.ts","Actions.ts","Contexts/AppContext.ts","Components/OldCounterItem.tsx","Components/OldCounterFolder.tsx","Components/OldCounters.tsx","Components/CreateCounter.tsx","Reducers/RootReducer.ts","Components/Modes.tsx","Components/inputHelper.tsx","Components/NumberView.tsx","Components/StopButton.tsx","Components/Counter.tsx","Components/CountersWrapper.tsx","Components/App.tsx","Hooks/useLocalStorage.ts","index.tsx"],"names":["Modes","CounterStates","Actions","counterInitialValue","name","state","Pause","renderValue","seconds","minutes","hours","savedTime","startTime","intervalId","initialState","counters","ids","data","oldCounters","mode","Multi","usedNames","getNewTime","currentTS","Date","newTS","Math","floor","getValueFromTS","getTSFromValue","ts","clone","result","deep","isArray","Array","isDate","isDataObject","isObject","forEach","v","push","Object","keys","k","AppContext","createContext","OldCounterItem","useContext","dispatch","id","className","type","title","value","style","background","border","textOverflow","onBlur","target","ADD_TO_USED_NAMES","payload","onChange","evt","CHANGE_NAME_FROM_DELETED","onChangeName","onClick","RESTORE_FROM_TABLE","onRestoreClick","DELETE_FROM_TABLE","onDeleteClick","OldCounterFolder","useState","isOpen","setIsOpen","stopPropagation","Collapse","map","isNode","OldCounters","length","structure","date","month","String","toLocaleString","dateCreated","getDate","createStructure","Row","Col","CreateCounter","Button","CREATE_COUNTER","stateModifiers","PLAY","Single","oldId","clearInterval","Playing","STOP","PAUSE","UPDATE_TIME","SET_INTERVAL_ID","newId","getTime","DELETE_AND_MOVE_TO_TABLE","filter","oldCounter","counterData","counter","rest","CHANGE_NAME_FROM_EXIST","CHANGE_MODE","oldIds","newCounter","oldCountersData","trim","toLowerCase","every","w","indexOf","includes","DELETE_FROM_USED_NAMES","n","CHANGE_TIME","timeType","getModifiedTS","storageStateModifiers","rootReducer","action","newState","setStorageState","position","top","right","Dropdown","toggle","DropdownToggle","caret","DropdownMenu","container","DropdownItem","ModeTypes","InputHelper","currentInput","onDelete","onKeyDown","getItemsForRender","useCallback","highlightPosition","setHighlightPosition","renderItems","setRenderItems","onButtonPush","e","isArrowDown","key","isArrowUp","isEnterKey","lastItemIndex","useEffect","document","addEventListener","removeEventListener","zIndex","i","width","height","padding","NumberView","isEdit","cursor","StopButton","numbersMap","Counter","inputRef","useRef","helperValue","setHelperValue","isHelperVisible","setIsHelperVisible","setIsEdit","wasEdit","setWasEdit","isKeyDownActive","setIsKeyDownActive","isPlaying","onTitleChange","Boolean","fontSize","left","maxWidth","ref","preventDefault","setTimeout","onFocus","currentName","current","focus","isFinite","renderTime","color","setInterval","flexBasis","CountersWrapper","md","App","commonState","localStorage","setItem","JSON","stringify","record","parse","getItem","undefined","setState","resultState","useLocalStorage","storageState","useReducer","Provider","Container","fluid","minHeight","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.c070657c.chunk.js","sourcesContent":["import {Actions} from '../Actions';\r\n\r\nexport enum Modes { Single = 'single', Multi = 'multi' }\r\n\r\nexport enum CounterStates { Playing, Pause }\r\n\r\nexport type CounterTypes = 'counters' | 'oldCounters';\r\n\r\nexport interface ICounterValue {\r\n    hours: number,\r\n    minutes: number,\r\n    seconds: number\r\n}\r\n\r\nexport interface ICounterItem {\r\n    renderValue: ICounterValue;\r\n    savedTime: number;\r\n    state: CounterStates;\r\n    startTime?: number;\r\n    intervalId: NodeJS.Timeout | null;\r\n    name: string;\r\n}\r\n\r\nexport type IState = {\r\n    [K in CounterTypes]: {\r\n        ids: string[],\r\n        data: {\r\n            [key: string]: ICounterItem\r\n        }\r\n    }\r\n} & { mode: Modes, usedNames: string[] }\r\n\r\nexport interface IAction {\r\n    setStorageState: Function;\r\n    id?: string;\r\n    type?: Actions;\r\n    payload?: string;\r\n    intervalId?: NodeJS.Timeout;\r\n    timeType?: 'hours' | 'minutes' | 'seconds';\r\n    mode?: Modes;\r\n    startTime?: number;\r\n}\r\n\r\nexport type Node = { isNode: boolean; id?: string } & ICounterItem;\r\nexport type NodesRecord = Record<string, Node>;\r\nexport interface IOM { [K: string]: Node | NodesRecord | IOM; }\r\n","import {IState, ICounterItem, Modes, ICounterValue, CounterStates, IOM, NodesRecord} from './Components/interfaces';\r\n\r\nexport const counterInitialValue: ICounterItem = {\r\n   name: 'без имени',\r\n   state: CounterStates.Pause,\r\n   renderValue: {\r\n      seconds: 0,\r\n      minutes: 0,\r\n      hours: 0\r\n   },\r\n   savedTime: 0,\r\n   startTime: null,\r\n   intervalId: null\r\n};\r\n\r\nexport const initialState: IState = {\r\n   counters: {\r\n      ids: [],\r\n      data: {}\r\n   },\r\n   oldCounters: {\r\n      ids: [],\r\n      data: {}\r\n   },\r\n   mode: Modes.Multi,\r\n   usedNames: []\r\n\r\n};\r\n\r\nexport const getNewTime = ({ startTime, savedTime }: ICounterItem) => {\r\n   const currentTS = +new Date();\r\n   const newTS = Math.floor((currentTS - startTime) / 1000) + savedTime;\r\n\r\n   return getValueFromTS(newTS);\r\n}\r\n\r\nexport const getTSFromValue = ({ seconds, minutes, hours }: ICounterValue) => {\r\n   return seconds + (minutes * 60) + (hours * 3600);\r\n}\r\n\r\nexport const getValueFromTS = (ts: number): ICounterValue => ({\r\n   minutes: Math.floor(ts / 60 % 60),\r\n   hours: Math.floor(ts / 3600),\r\n   seconds: ts % 60\r\n});\r\n\r\nexport const getModifiedTS = (value: ICounterValue, timeType: keyof ICounterValue, payload: number): number => (\r\n   getTSFromValue({\r\n      ...value,\r\n      [timeType]: payload\r\n   })\r\n);\r\n\r\nexport const createStructure = (state: IState) => {\r\n   const result = {} as IOM;\r\n\r\n   state.oldCounters.ids.forEach(id => {\r\n      const date = new Date(+id);\r\n      const month = String(date.toLocaleString('default', { month: 'long' }));\r\n      const dateCreated = String(date.getDate());\r\n\r\n      if (!result[month]) result[month] = {};\r\n\r\n      if (!(result[month] as IOM)[dateCreated]) (result[month] as IOM)[dateCreated] = {};\r\n\r\n      ((result[month] as IOM)[dateCreated] as NodesRecord)[id] = {\r\n         ...state.oldCounters.data[id], id: id, isNode: true\r\n      };\r\n   });\r\n\r\n   return result;\r\n};\r\n\r\nexport const clone = <T extends unknown>(data: T, deep: boolean = false): T => {\r\n   const isArray = Array.isArray(data);\r\n   const isDate = data instanceof Date;\r\n   const isDataObject = isObject(data);\r\n\r\n   if (isDate) return new Date(data as Date) as T;\r\n\r\n   if (!deep) {\r\n      if (isArray) return [...data as unknown[]] as T;\r\n      if (isDataObject) return { ...data as object } as T;\r\n   }\r\n\r\n   if (!isArray && !isDataObject) {\r\n      return data;\r\n   }\r\n\r\n   let result: T;\r\n\r\n   if (isArray) {\r\n      result = [] as T;\r\n\r\n      (data as unknown[]).forEach((v) => (result as unknown[]).push(clone(v, deep)));\r\n\r\n      return result;\r\n   }\r\n\r\n   result = {} as T;\r\n\r\n   (Object.keys(data) as (keyof T)[]).forEach((k) => (result[k] as T) = clone(data[k] as T, deep));\r\n\r\n   return result;\r\n}\r\n\r\nconst isObject = (data: unknown): data is object => {\r\n   return typeof data === 'object' && !Array.isArray(data) && data !== null && !(data instanceof Date);\r\n}\r\n","export enum Actions {\r\n   STOP = 'stop',\r\n   PLAY = 'play',\r\n   PAUSE = 'pause',\r\n   UPDATE_TIME = 'updateTime',\r\n   CREATE_COUNTER = 'createCounter',\r\n   SET_INTERVAL_ID = 'setIntervalId',\r\n   DELETE_AND_MOVE_TO_TABLE = 'deleteAndMoveToTable',\r\n   CHANGE_NAME_FROM_EXIST = 'changeNameFromExist',\r\n   CHANGE_NAME_FROM_DELETED = 'changeNameFromDeleted',\r\n   DELETE_FROM_TABLE = 'deleteFromTable',\r\n   CHANGE_MODE = 'changeMode',\r\n   RESTORE_FROM_TABLE = 'restoreFromTable',\r\n   ADD_TO_USED_NAMES = 'addToUsedNames',\r\n   DELETE_FROM_USED_NAMES = 'deleteFromUsedNames',\r\n   CHANGE_TIME = 'changeTime'\r\n}\r\n","import { IAction } from '../Components/interfaces';\r\nimport { initialState } from '../Utils';\r\nimport { createContext } from 'react';\r\n\r\nexport const AppContext = createContext([initialState, (data: Partial<IAction>) => void 0] as const);\r\n","import { AppContext } from '../Contexts/AppContext';\r\nimport { Actions } from '../Actions';\r\nimport { useContext } from 'react';\r\nimport { Node } from './interfaces';\r\n\r\nimport './_oldCounterItem.css';\r\n\r\ninterface IOptions {\r\n    data: Node;\r\n}\r\n\r\nexport const OldCounterItem = ({ data }: IOptions) => {\r\n    const [, dispatch] = useContext(AppContext);\r\n    const { id, name, renderValue: { hours, minutes, seconds } } = data;\r\n\r\n    const onDeleteClick = (id: string) => dispatch({ type: Actions.DELETE_FROM_TABLE, id });\r\n    const onRestoreClick = (id: string) => dispatch({ type: Actions.RESTORE_FROM_TABLE, id });\r\n    const onChangeName = ({ target: { value } } : { target: HTMLInputElement }, id: string) => (\r\n        dispatch({ type: Actions.CHANGE_NAME_FROM_DELETED, id, payload: value })\r\n    );\r\n    const onBlur = ({ target: { value } }: { target: HTMLInputElement }) => (\r\n        dispatch({ type: Actions.ADD_TO_USED_NAMES, payload: value })\r\n    );\r\n\r\n    return (\r\n        <div className='oldCounterItem d-flex p-3 border-bottom align-items-center'>\r\n            <p className='oldCounterItem__item text-white'>\r\n                <input type='text'\r\n                       className='w-100 text-white'\r\n                       title={ name }\r\n                       value={ name }\r\n                       style={{ background: 'transparent', border: 'none', textOverflow: 'ellipsis' }}\r\n                       onBlur={ onBlur }\r\n                       onChange={(evt) => onChangeName(evt, id)}\r\n                 />\r\n            </p>\r\n            <p className='oldCounterItem__item oldCounterItem__item--time text-white'>{ hours } : { minutes } : { seconds }</p>\r\n            <p className='oldCounterItem__item oldCounterItem__item--action' onClick={() => onRestoreClick(id)}>&#9874;</p>\r\n            <p className='oldCounterItem__item oldCounterItem__item--action text-danger' onClick={() => onDeleteClick(id)}>&times;</p>\r\n        </div>\r\n    );\r\n};\r\n","import { OldCounterItem } from './OldCounterItem';\r\nimport { NodesRecord, Node, IOM } from './interfaces';\r\nimport { SyntheticEvent, useState } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\n\r\ninterface IOptions {\r\n    name: keyof IOM;\r\n    data: IOM | NodesRecord;\r\n}\r\n\r\nexport const OldCounterFolder = ({ name, data }: IOptions) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const onClick = (evt: SyntheticEvent) => {\r\n        evt.stopPropagation();\r\n        setIsOpen(value => !value);\r\n    };\r\n\r\n    return (\r\n        <div key={ name } className='bg-dark pt-1 pb-1 pl-3 pr-3'>\r\n            <div className='text-white' onClick={ onClick }>{ name }</div>\r\n\r\n            <Collapse isOpen={ isOpen }>\r\n                { Object.keys(data).map(k => (\r\n                    data[k].isNode\r\n                        ? <OldCounterItem data={ data[k] as Node } key={ k } />\r\n                        : <OldCounterFolder data={ data[k] as IOM } name={ k } key={ k } />\r\n                )) }\r\n            </Collapse>\r\n        </div>\r\n    );\r\n}\r\n","import { AppContext } from '../Contexts/AppContext';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { useContext } from 'react';\r\nimport { IOM } from './interfaces';\r\nimport { createStructure } from '../Utils';\r\nimport { OldCounterFolder } from './OldCounterFolder';\r\n\r\nexport const OldCounters = () => {\r\n   const [state] = useContext(AppContext);\r\n\r\n   if (!state.oldCounters.ids.length) return <></>\r\n\r\n   const structure = createStructure(state);\r\n\r\n   return (\r\n      <Row className='overflow-auto'>\r\n         <Col className='mb-5'>\r\n            { Object.keys(structure).map(k => (\r\n               <OldCounterFolder data={ structure[k] as IOM } name={ k } key={ k } />\r\n            )) }\r\n         </Col>\r\n      </Row>\r\n   )\r\n};\r\n","import { useContext } from 'react';\r\nimport { AppContext } from \"../Contexts/AppContext\";\r\nimport { Button, Row, Col } from \"reactstrap\";\r\nimport { Actions } from \"../Actions\";\r\n\r\nexport const CreateCounter = () => {\r\n   const [state, dispatch] = useContext(AppContext);\r\n   const createCounter = () => dispatch({ type: Actions.CREATE_COUNTER });\r\n\r\n   return (\r\n      <Row>\r\n         <Col>\r\n            <Button onClick={ createCounter }>{ state.counters.ids.length ? 'Ещё счётчик' : 'Создать счётчик' }</Button>\r\n         </Col>\r\n      </Row>\r\n   )\r\n}\r\n","import { getNewTime, counterInitialValue, getTSFromValue, getModifiedTS, clone } from '../Utils';\r\nimport { CounterStates, Modes, IState, IAction, ICounterItem } from '../Components/interfaces';\r\nimport { Actions } from '../Actions';\r\n\r\ntype StopProps = Pick<IAction, 'id'>;\r\ntype PlayProps = Pick<IAction, 'id' | 'startTime'>;\r\ntype PauseProps = Pick<IAction, 'id'>;\r\ntype UpdateTimeProps = Pick<IAction, 'id'>;\r\ntype SetIntervalProps = Pick<IAction, 'id' | 'intervalId'>;\r\ntype MoveToTableProps = Pick<IAction, 'id'>;\r\ntype ChangeNameFromExistProps = Pick<IAction, 'id' | 'payload'>;\r\ntype ChangeNameFromDeletedProps = Pick<IAction, 'id' | 'payload'>;\r\ntype DeleteFromTableProps = Pick<IAction, 'id'>;\r\ntype ChangeModeProps = Pick<IAction, 'mode'>;\r\ntype RestoreFromTableProps = Pick<IAction, 'id'>;\r\ntype AddToUsedNamesProps = Pick<IAction, 'payload'>;\r\ntype DeleteFromUsedNamesProps = Pick<IAction, 'payload'>;\r\ntype ChangeTimeProps = Pick<IAction, 'id'| 'timeType' |'payload'>;\r\n\r\ntype UpdateTimeStorageProps = Pick<IAction, 'id' | 'setStorageState'>;\r\n\r\nconst stateModifiers = {\r\n   [Actions.PLAY]: (state: IState, { id, startTime }: PlayProps) => {\r\n      if (state.mode === Modes.Single) {\r\n         state.counters.ids.forEach(oldId => {\r\n            state.counters.data[oldId] = {\r\n               ...state.counters.data[oldId],\r\n               state: CounterStates.Pause,\r\n               savedTime: getTSFromValue(state.counters.data[oldId].renderValue),\r\n               startTime: null\r\n            }\r\n\r\n            if (state.counters.data[oldId].intervalId !== null) {\r\n               clearInterval(state.counters.data[oldId].intervalId);\r\n               state.counters.data[oldId].intervalId = null;\r\n            }\r\n         });\r\n      }\r\n\r\n      state.counters.data[id] = {\r\n         ...state.counters.data[id],\r\n         state: CounterStates.Playing,\r\n         startTime\r\n      };\r\n\r\n      return state;\r\n   },\r\n   [Actions.STOP]: (state: IState, { id }: StopProps) => {\r\n      clearInterval(state.counters.data[id]?.intervalId);\r\n\r\n      state.counters.data[id] = {\r\n         ...state.counters.data[id],\r\n         startTime: null,\r\n         state: CounterStates.Pause,\r\n         intervalId: null,\r\n         renderValue: counterInitialValue.renderValue,\r\n         savedTime: counterInitialValue.savedTime\r\n      }\r\n\r\n      return state;\r\n   },\r\n   [Actions.PAUSE]: (state: IState, { id }: PauseProps) => {\r\n      clearInterval(state.counters.data[id].intervalId);\r\n\r\n      state.counters.data[id] = {\r\n         ...state.counters.data[id],\r\n         startTime: null,\r\n         state: CounterStates.Pause,\r\n         intervalId: null,\r\n         savedTime: getTSFromValue(state.counters.data[id].renderValue)\r\n      }\r\n\r\n      return state;\r\n   },\r\n   [Actions.UPDATE_TIME]: (state: IState, { id }: UpdateTimeProps) => {\r\n      state.counters.data[id].renderValue = getNewTime(state.counters.data[id]);\r\n\r\n      return state;\r\n   },\r\n   [Actions.SET_INTERVAL_ID]: (state: IState, { id, intervalId }: SetIntervalProps) => {\r\n      state.counters.data[id].intervalId = intervalId;\r\n\r\n      return state;\r\n   },\r\n   [Actions.CREATE_COUNTER]: (state: IState) => {\r\n      const newId = String(new Date().getTime());\r\n\r\n      state.counters.ids.push(newId);\r\n      state.counters.data[newId] = { ...counterInitialValue };\r\n\r\n      return state;\r\n   },\r\n   [Actions.DELETE_AND_MOVE_TO_TABLE]: (state: IState, { id }: MoveToTableProps) => {\r\n      const ids = state.counters.ids.filter((oldId) => oldId !== id);\r\n      let oldCounter = {} as ICounterItem;\r\n      const counterData = (({ [id]: counter, ...rest }) => {\r\n         const { seconds = 0, minutes = 0, hours = 0 } = counter?.renderValue;\r\n\r\n         if (seconds !== 0 || minutes !== 0 || hours !== 0) {\r\n            oldCounter = { ...counter };\r\n            state.oldCounters.ids.push(id);\r\n         }\r\n\r\n         return rest;\r\n      })(state.counters.data);\r\n\r\n      if (state.counters.data[id].intervalId) {\r\n         clearInterval(state.counters.data[id].intervalId);\r\n      }\r\n\r\n      state.oldCounters.data[id] = oldCounter;\r\n      state.counters = { ids, data: counterData };\r\n\r\n      return state;\r\n   },\r\n   [Actions.CHANGE_NAME_FROM_EXIST]: (state: IState, { id, payload }: ChangeNameFromExistProps) => {\r\n      state.counters.data[id].name = payload;\r\n\r\n      return state;\r\n   },\r\n   [Actions.CHANGE_NAME_FROM_DELETED]: (state: IState, { id, payload }: ChangeNameFromDeletedProps) => {\r\n      state.oldCounters.data[id].name = payload;\r\n\r\n      return state;\r\n   },\r\n   [Actions.DELETE_FROM_TABLE]: (state: IState, { id }: DeleteFromTableProps) => {\r\n      state.oldCounters = {\r\n         ids: state.oldCounters.ids.filter(oldId => id !== oldId),\r\n         data: (({ [id]:_, ...rest }) => rest)(state.oldCounters.data)\r\n      };\r\n\r\n      return state;\r\n   },\r\n   [Actions.CHANGE_MODE]: (state: IState, { mode }: ChangeModeProps) => {\r\n      if (mode !== state.mode) state.mode = mode;\r\n\r\n      return state;\r\n   },\r\n   [Actions.RESTORE_FROM_TABLE]: (state: IState, { id }: RestoreFromTableProps) => {\r\n      const oldIds = state.oldCounters.ids.filter(oldId => oldId !== id);\r\n      let newCounter = {} as ICounterItem;\r\n\r\n      const oldCountersData = (({ [id]: counter, ...rest }) => {\r\n         newCounter = { ...counter };\r\n         state.counters.ids.push(id);\r\n\r\n         return rest;\r\n      })(state.oldCounters.data);\r\n\r\n      state.oldCounters = { ids: oldIds, data: oldCountersData };\r\n      state.counters.data[id] = newCounter;\r\n\r\n      return state;\r\n   },\r\n   [Actions.ADD_TO_USED_NAMES]: (state: IState, { payload }: AddToUsedNamesProps) => {\r\n      const value = payload.trim().toLowerCase();\r\n\r\n      if (value && state.usedNames.every(w => !~w.indexOf(value)) && !state.usedNames.includes(value)) {\r\n         state.usedNames.push(value);\r\n      }\r\n\r\n      return state;\r\n   },\r\n   [Actions.DELETE_FROM_USED_NAMES]: (state: IState, { payload }: DeleteFromUsedNamesProps) => {\r\n      state.usedNames = state.usedNames.filter(n => n !== payload);\r\n\r\n      return state;\r\n   },\r\n   [Actions.CHANGE_TIME]: (state: IState, { payload, timeType, id }: ChangeTimeProps) => {\r\n      state.counters.data[id].renderValue[timeType] = +payload;\r\n      state.counters.data[id].savedTime = getModifiedTS(state.counters.data[id].renderValue, timeType, +payload);\r\n\r\n      return state;\r\n   }\r\n};\r\n\r\nconst storageStateModifiers = {\r\n   [Actions.UPDATE_TIME]: (state: IState, { id }: UpdateTimeStorageProps) => {\r\n      state.counters.data[id] = {\r\n         ...state.counters.data[id],\r\n         renderValue: getNewTime(state.counters.data[id]),\r\n         state: CounterStates.Pause,\r\n         savedTime: getTSFromValue(state.counters.data[id].renderValue) + 1\r\n      }\r\n\r\n      return state;\r\n   }\r\n};\r\n\r\nexport const rootReducer = (state: IState, action: IAction): IState => {\r\n   const newState = stateModifiers[action.type](clone(state, true), action);\r\n\r\n   action.setStorageState(\r\n       action.type in storageStateModifiers\r\n           ? storageStateModifiers[action.type as keyof typeof storageStateModifiers](clone(state, true), action)\r\n           : newState\r\n   );\r\n\r\n   return newState ? newState : clone(newState);\r\n}\r\n","import { useState, useContext } from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownItem, DropdownMenu } from 'reactstrap';\r\nimport { AppContext } from '../Contexts/AppContext';\r\nimport { Modes as ModeTypes } from './interfaces';\r\nimport { Actions } from '../Actions';\r\n\r\nexport const Modes = () => {\r\n   const [state, dispatch] = useContext(AppContext);\r\n   const [isOpen, setIsOpen] = useState(false);\r\n\r\n   return (\r\n      <div style={{ position: 'absolute', top: '10px', right: '15px' }}>\r\n         <Dropdown isOpen={ isOpen } toggle={ () => setIsOpen(value => !value) }>\r\n            <DropdownToggle caret>{ state.mode }</DropdownToggle>\r\n            <DropdownMenu container=\"body\">\r\n               <DropdownItem onClick={() => dispatch({ type: Actions.CHANGE_MODE, mode: ModeTypes.Single })}>\r\n                  { ModeTypes.Single }\r\n               </DropdownItem>\r\n               <DropdownItem onClick={() => dispatch({ type: Actions.CHANGE_MODE, mode: ModeTypes.Multi })}>\r\n                  { ModeTypes.Multi }\r\n               </DropdownItem>\r\n            </DropdownMenu>\r\n         </Dropdown>\r\n      </div>\r\n   )\r\n}\r\n","import { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { AppContext } from '../Contexts/AppContext';\r\nimport { IState } from './interfaces';\r\n\r\nimport './_inputHelper.css';\r\n\r\ninterface IInputHelperOptions {\r\n    currentInput: string;\r\n    onClick: Function;\r\n    onDelete: Function;\r\n    onKeyDown: Function;\r\n}\r\n\r\nexport const InputHelper = ({ currentInput, onClick, onDelete, onKeyDown }: IInputHelperOptions) => {\r\n    const [state] = useContext(AppContext);\r\n    const getItemsForRender = useCallback(() => (\r\n        state.usedNames.filter(n => ~n.indexOf(currentInput.toLowerCase()) && currentInput !== n)\r\n    ), [state.usedNames, currentInput]);\r\n    const [highlightPosition, setHighlightPosition] = useState(null);\r\n    const [renderItems, setRenderItems]: [IState['usedNames'], Function] = useState(getItemsForRender());\r\n    const onButtonPush = useCallback((e: KeyboardEvent) => {\r\n        const isArrowDown = e.key === 'ArrowDown';\r\n        const isArrowUp = e.key === 'ArrowUp';\r\n        const isEnterKey = e.key === 'Enter';\r\n\r\n        if (isArrowDown || isArrowUp) {\r\n            onKeyDown(highlightPosition);\r\n            return setHighlightPosition((value: number) => {\r\n                const lastItemIndex = renderItems.length - 1;\r\n\r\n                if (value === null || (value === 0 && isArrowUp)) return 0;\r\n                if (value >= lastItemIndex && isArrowDown) return lastItemIndex;\r\n\r\n                return value + (isArrowDown ? 1 : -1);\r\n            });\r\n        }\r\n\r\n        if (isEnterKey && highlightPosition !== null) {\r\n            onClick(renderItems[highlightPosition]);\r\n        }\r\n\r\n        setHighlightPosition(null);\r\n        onKeyDown(null);\r\n    }, [onKeyDown, onClick, renderItems, highlightPosition]);\r\n\r\n    useEffect(() => setRenderItems(getItemsForRender), [getItemsForRender]);\r\n    useEffect(() => document.addEventListener('keydown', onButtonPush));\r\n    useEffect(() => () => document.removeEventListener('keydown', onButtonPush));\r\n\r\n    if (!renderItems.length) return <></>;\r\n\r\n    return (\r\n        <div className='inputHelper bg-white d-flex flex-column position-absolute p-1' style={{ top: '70px', zIndex: 10 }}>\r\n            { renderItems\r\n                .map((n, i) => (\r\n                    <div className={ 'inputHelper__item' + (highlightPosition === i ? ' bg-warning' : '')} key={ n }>\r\n                        <p className='inputHelper__text' onClick={ (evt) => { evt.stopPropagation(); onClick(n) }}>{ n }</p>\r\n                        <div onClick={ evt => { evt.stopPropagation(); onDelete(n) }}\r\n                             className='inputHelper__item-delete text-danger'>\r\n                            &times;\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\ninterface IProps {\r\n    isEdit: boolean;\r\n    value: number | string;\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    [key: string]: unknown;\r\n}\r\n\r\nconst className = 'text-white d-flex text-white bg-dark align-items-center justify-content-center text-center';\r\nconst style = { border: 'none', width: '30%', height: '24px', padding: 0 };\r\n\r\nexport const NumberView = ({ isEdit, value, ...rest }: IProps) => {\r\n    if (!isEdit) return <div { ...rest } className={ className } style={{ ...style, cursor: 'default' }}>{ value }</div>\r\n\r\n    return <input value={ value } className={ className }  style={ style } { ...rest } />\r\n}\r\n","import { Button } from 'reactstrap';\r\nimport React from 'react';\r\n\r\ninterface IProps {\r\n    style?: object;\r\n    [key: string]: unknown;\r\n}\r\n\r\nexport const StopButton = ({ style, ...rest }: IProps) => (\r\n    <Button className='bg-dark p-0 position-absolute'\r\n            style={{ width: '15px', height: '15px', ...style }}\r\n            { ...rest } />\r\n)\r\n","import {useContext, useState, useRef, ReactEventHandler} from 'react';\r\nimport { CounterStates, IAction } from './interfaces';\r\nimport { Button } from 'reactstrap';\r\nimport { AppContext } from '../Contexts/AppContext';\r\nimport { Actions } from '../Actions';\r\nimport { InputHelper } from './inputHelper';\r\nimport { NumberView } from './NumberView';\r\nimport {StopButton} from \"./StopButton\";\r\n\r\nconst numbersMap: IAction['timeType'][] = ['hours', 'minutes', 'seconds'];\r\n\r\nexport const Counter = ({ id }: { id: string }) => {\r\n   const inputRef = useRef(null);\r\n   const [helperValue, setHelperValue] = useState('');\r\n   const [isHelperVisible, setIsHelperVisible] = useState(false);\r\n   const [state, dispatch] = useContext(AppContext);\r\n   const [isEdit, setIsEdit] = useState(false);\r\n   const [wasEdit, setWasEdit] = useState(false);\r\n   const [isKeyDownActive, setIsKeyDownActive] = useState(true);\r\n\r\n   const isPlaying = () => state.counters.data[id].state === CounterStates.Playing;\r\n   const onPausePlayClick = () => {\r\n      if (isPlaying()) return dispatch({ type: Actions.PAUSE, id });\r\n\r\n      dispatch({ type: Actions.PLAY, id, startTime: +new Date() });\r\n      const intervalId = setInterval(() => dispatch({ type: Actions.UPDATE_TIME, id }), 1000);\r\n      dispatch({ type: Actions.SET_INTERVAL_ID, intervalId, id });\r\n   };\r\n   const onStopClick = () => dispatch({ type: Actions.STOP, id });\r\n   const onDeleteClick = () => dispatch({ type: Actions.DELETE_AND_MOVE_TO_TABLE, id });\r\n   const onInputHelperClick = (value: string) => {\r\n      onTitleChange({ target: { value }});\r\n      inputRef.current.focus();\r\n   }\r\n   const onTitleChange = ({ target: { value }}: { target: Partial<HTMLInputElement> }) => {\r\n      setIsHelperVisible(Boolean(value));\r\n      setHelperValue(value);\r\n      dispatch({ type: Actions.CHANGE_NAME_FROM_EXIST, payload: value, id });\r\n   };\r\n   const onTitleBlur = ({ target: { value } }: { target: HTMLInputElement }) => {\r\n      setTimeout(() => setIsHelperVisible(false), 300);\r\n      if (!wasEdit) setIsEdit(false);\r\n      dispatch({ type: Actions.ADD_TO_USED_NAMES, payload: value });\r\n   };\r\n   const onDeleteOldName = (payload: string) => {\r\n      setTimeout(() => { inputRef.current.focus(); setIsHelperVisible(true) }, 300);\r\n      dispatch({ type: Actions.DELETE_FROM_USED_NAMES, payload });\r\n   }\r\n   const onTitleFocus = (currentName: string) => {\r\n      setIsEdit(true);\r\n      setIsHelperVisible(Boolean(currentName));\r\n      setHelperValue(currentName);\r\n   }\r\n   const onEditClick = () => {\r\n      setIsEdit(value => !value);\r\n      setWasEdit(value => !value);\r\n   }\r\n   const onTimeChange = (payload: string, timeType: IAction['timeType']) => {\r\n      if (!isEdit) return;\r\n      if (!isFinite(+payload)) return;\r\n\r\n      dispatch({ type: Actions.CHANGE_TIME, payload, timeType, id });\r\n   };\r\n   const renderTime = () => {\r\n      const { renderValue: { seconds, minutes, hours } } = state.counters.data[id];\r\n\r\n      return [hours, minutes, seconds].map((v, i) => (\r\n          <NumberView isEdit={ isEdit }\r\n                      key={ numbersMap[i] }\r\n                      value={ v }\r\n                      onChange={ ({ target: { value } }) => onTimeChange(value, numbersMap[i]) } />\r\n      ));\r\n   }\r\n   const onNameInputKeyDown = (e: Parameters<ReactEventHandler>[0]) => (isHelperVisible && !isKeyDownActive) && e.preventDefault();\r\n\r\n   const { name, savedTime } = state.counters.data[id];\r\n\r\n   return (\r\n      <div style={{ border: '1px solid' }} className='d-flex flex-column position-relative pt-4 pb-4 bg-dark'>\r\n         <div className='position-absolute text-danger'\r\n              style={{ top: '-5px', right: '5px', fontSize: '20px', cursor: 'pointer' }}\r\n              onClick={ onDeleteClick }>\r\n            &times;\r\n         </div>\r\n         <div className={`position-absolute ${isEdit ? 'badge-danger' : ''} `}\r\n              style={{ top: '5px', right: '25px', fontSize: '10px', cursor: 'pointer' }}\r\n              onClick={ onEditClick }>\r\n            &#9998;\r\n         </div>\r\n         { savedTime !== 0 && <StopButton style={{ top: '5px', left: '5px' }} onClick={ onStopClick } /> }\r\n         <input className='mb-3 mt-3 align-self-center text-white bg-dark'\r\n                style={{ maxWidth: '60%', border: 'transparent' }}\r\n                value={ name }\r\n                title={ name }\r\n                ref={ inputRef }\r\n                onKeyDown={ onNameInputKeyDown }\r\n                onBlur={ onTitleBlur }\r\n                onFocus={ () => onTitleFocus(name) }\r\n                onChange={ onTitleChange } />\r\n         { isHelperVisible && <InputHelper currentInput={ helperValue }\r\n                                           onClick={ onInputHelperClick }\r\n                                           onDelete={ onDeleteOldName }\r\n                                           onKeyDown={ (highlightPosition: unknown) => setIsKeyDownActive(highlightPosition === null) } />\r\n         }\r\n         <div className='mb-5 justify-content-around d-flex text-white w-100'>\r\n            { renderTime() }\r\n         </div>\r\n         <div className='justify-content-around d-flex'>\r\n            <Button color='success' onClick={ onPausePlayClick } style={{ flexBasis: '80%' }}>\r\n               { isPlaying() ? 'Пауза' : savedTime === 0 ? 'Старт' : 'Продолжить' }\r\n            </Button>\r\n         </div>\r\n      </div>\r\n   )\r\n};\r\n","import { AppContext } from '../Contexts/AppContext';\r\nimport { Col, Row } from 'reactstrap';\r\nimport { Counter } from './Counter';\r\nimport { useContext } from 'react';\r\n\r\nexport const CountersWrapper = () => {\r\n   const [state] = useContext(AppContext);\r\n\r\n   return (\r\n      <Row key='counters' className='mb-4'>\r\n         { state.counters.ids.map((id) => (\r\n            <Col md={4} key={id} className='mb-4'>\r\n               <Counter id={id} />\r\n            </Col>\r\n         )) }\r\n      </Row>\r\n   )\r\n}\r\n","import { useReducer } from 'react';\r\nimport { OldCounters } from './OldCounters';\r\nimport { Container } from 'reactstrap';\r\nimport { CreateCounter } from './CreateCounter';\r\nimport { rootReducer } from '../Reducers/RootReducer';\r\nimport { AppContext } from '../Contexts/AppContext';\r\nimport { useLocalStorage } from '../Hooks/useLocalStorage';\r\nimport { initialState } from '../Utils';\r\nimport { IState, IAction } from './interfaces';\r\nimport { Modes } from './Modes';\r\nimport { CountersWrapper } from './CountersWrapper';\r\n\r\nexport const App = () => {\r\n   const [storageState, setStorageState] = useLocalStorage({ keys: Object.keys(initialState) as Array<keyof IState> });\r\n   const [state, dispatch] = useReducer<typeof rootReducer>(rootReducer, { ...initialState, ...storageState });\r\n   const customDispatch = (data: Partial<IAction>) => dispatch({ ...data, setStorageState });\r\n\r\n   return (\r\n      <AppContext.Provider value={[state, customDispatch]}>\r\n         <Container fluid className='bg-primary' style={{ minHeight: '100vh', padding: '70px 3rem 20px' }}>\r\n            <Modes />\r\n            <OldCounters />\r\n            <CountersWrapper />\r\n            <CreateCounter />\r\n         </Container>\r\n      </AppContext.Provider>\r\n   )\r\n};\r\n","import { useState } from 'react';\r\nimport { IState } from '../Components/interfaces';\r\n\r\ntype UseLocalStorage = ({ keys, initialState }: { keys: Array<keyof IState>, initialState?: IState}) => [Partial<IState>, Function];\r\ntype ISetStorageProps = ((state: IState) => IState) | IState;\r\n\r\n\r\nexport const useLocalStorage: UseLocalStorage = ({ keys, initialState = {} }) => {\r\n   const commonState = {} as IState;\r\n   const initialKeys = Object.keys(initialState) as Array<keyof IState>;\r\n\r\n   initialKeys.forEach(k => localStorage.setItem(k, JSON.stringify(initialState[k])));\r\n\r\n   keys.forEach(k => {\r\n      const record = JSON.parse(localStorage.getItem(k) as string);\r\n\r\n      if (['counters', 'oldCounters'].includes(k)) {\r\n         record?.ids.forEach((id: string) => {\r\n            if (record.data[id].value) {\r\n               record.data[id] = {\r\n                  ...record.data[id],\r\n                  renderValue: { ...record.data[id].value }\r\n               }\r\n\r\n               delete record.data[id].value;\r\n            }\r\n         });\r\n      }\r\n\r\n      if (record !== null && record !== undefined) {\r\n         commonState[k] = record;\r\n      }\r\n   });\r\n\r\n   const [state, setState] = useState(commonState);\r\n\r\n   const storageSetState = (newState: ISetStorageProps) => {\r\n      let resultState: IState;\r\n\r\n      if (typeof newState === 'function') {\r\n         resultState = { ...state, ...newState(state) };\r\n      } else {\r\n         resultState = { ...state, ...newState };\r\n      }\r\n\r\n      keys.forEach(k => localStorage.setItem(k, JSON.stringify(resultState[k])));\r\n      setState(resultState);\r\n   };\r\n\r\n   return [state, storageSetState];\r\n}\r\n","import ReactDOM from 'react-dom';\r\nimport { App } from \"./Components/App\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}