{"version":3,"sources":["hooks/useFetch.js","utils.js","hooks/useData.js","components/TablePagination.js","components/SearchTable.js","components/FullInfo.js","components/AddMemberForm.js","components/AddMember.js","components/DataTable.js"],"names":["useFetch","url","useState","isLoading","setIsLoading","response","setResponse","error","setError","options","setOptions","doFetch","useCallback","useEffect","requestOptions","axios","then","data","catch","sortedFields","id","firstName","lastName","email","phone","useData","initialState","type","prepareNewUser","state","newUser","newData","commonData","userToAdd","map","reduce","curr","prev","address","streetAddress","city","zip","description","unshift","page","slice","sorted","prepareNewPageData","maxPageData","minPageData","prepareData","isFullType","currentData","prepareSearchData","query","notFilteredState","subStringCheck","lowercase","trim","string","subString","formatString","str","toLowerCase","split","sort","filter","l","result","forEach","ssLetter","temp","find","sLetter","splice","indexOf","push","join","stringController","fields","Object","keys","filtered","element","some","key","includes","String","reducer","payload","tableType","userInfo","useReducer","dispatch","TablePagination","start","end","length","setSortStatus","currentPage","setSelectedRow","setSearchQuery","Pagination","size","Math","floor","Array","el","i","props","onClick","PaginationItem","active","PaginationLink","SearchTable","value","setValue","Form","onSubmit","evt","preventDefault","FormGroup","className","Input","onChange","target","placeholder","Button","FullInfo","Label","readOnly","style","resize","AddMemberForm","setVisible","setFirstName","setLastName","setPhone","setEmail","disabled","setDisabled","formData","setFormData","k","Boolean","InputGroup","InputGroupAddon","addonType","InputGroupText","color","AddMember","visible","Row","DataTable","full","partial","tableThData","sortStatus","selectedRow","searchQuery","onThClick","columnName","columns","sortedInfo","sortType","sortOptions","asc","desc","a","b","sorting","Spinner","getTablePaginationProps","getSearchTableProps","Table","dark","hover","thName","ButtonDropdown","toggle","direction","DropdownToggle","caret","onTrClick","backgroundColor","renderTable","e"],"mappings":"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","file":"static/js/4.b4c3bce1.chunk.js","sourcesContent":["import {useState, useEffect, useCallback} from \"react\";\nimport axios from \"axios\";\n\nconst useFetch = url => {\n  const baseUrl = '/';\n  const [isLoading, setIsLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [options, setOptions] = useState({});\n\n  const doFetch = useCallback((options = {}) => {\n    setOptions(options);\n    setIsLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (!isLoading) return;\n\n    const requestOptions = {\n      ...options,\n    };\n\n    axios(baseUrl + url, requestOptions)\n      .then(({data}) => {\n        setIsLoading(false);\n        setResponse(data);\n      })\n      .catch(({response: {data: error}}) => {\n        setIsLoading(false);\n        setError(error);\n      });\n  }, [isLoading, options, url]);\n\n  return [{isLoading, response, error}, doFetch];\n};\n\nexport default useFetch;\n","export const sortedFields = {\n  id: 'desc',\n  firstName: 'desc',\n  lastName: 'desc',\n  email: 'desc',\n  phone: 'desc'\n};\nexport const sorting = (columnName, columns, sortedInfo) => {\n  const sortType = sortedInfo[columnName] === 'asc' ? 'desc' : 'asc';\n  const sortOptions = {\n    asc: {'>': 1, '<': -1},\n    desc: {'>': -1, '<': 1}\n  };\n  const sorted = columns.sort(({[columnName]: a}, {[columnName]: b}) => {\n    if (a > b) return sortOptions[sortType]['>'];\n    if (a < b) return sortOptions[sortType]['<'];\n    return 0;\n  });\n\n  sortedInfo = {sortedFields, [columnName]: sortType};\n\n  return [sorted, sortedInfo];\n};\nexport const delimiterPerPage = 50;\nexport const range = (start, end) => (\n  [...Array(end).keys()].map(el => el + start)\n);\n","import {useCallback, useReducer} from \"react\";\n\nimport {delimiterPerPage, sortedFields} from \"../utils\";\n\n/**\n * @param initialState {Array}\n * @param type {String}\n * @returns {[Object, Function]}\n */\nconst useData = (initialState = [], type = '') => {\n  const prepareNewUser = (state, newUser) => {\n    // const searchSameUser = (users, newUser) => {\n    //   return !!users.find(user => {\n    //     const oldUser = JSON.stringify([user.firstName, user.lastName, user.phone, user.email]);\n    //     const _newUser = JSON.stringify([newUser.firstName, newUser.lastName, newUser.phone, newUser.email]);\n    //\n    //     return oldUser === _newUser;\n    //   })\n    // };\n\n    // if (searchSameUser(state.commonData, newUser)) return state;\n    const newData = state.commonData;\n    const userToAdd = {\n      ...newUser,\n      id: (newData.map(({id}) => id).reduce((curr, prev) => (\n        curr > prev ? curr : prev\n      ))) + 1,\n      address: {\n        streetAddress: '',\n        city: '',\n        state: '',\n        zip: '',\n      },\n      description: '',\n    };\n    newData.unshift(userToAdd);\n\n    return {\n      commonData: newData,\n      type: state.page ? 'full' : 'partial',\n      data: newData.slice(0, delimiterPerPage),\n      page: 1,\n      sorted: {\n        id: 'desc',\n        firstName: 'desc',\n        lastName: 'desc',\n        email: 'desc',\n        phone: 'desc'\n      },\n    };\n  };\n  const prepareNewPageData = (state, page) => {\n    const maxPageData = page * delimiterPerPage;\n    const minPageData = maxPageData - delimiterPerPage;\n\n    return {\n      ...state, page,\n      sorted: sortedFields,\n      data: state.commonData.slice(minPageData, maxPageData),\n    }\n  };\n  const prepareData = useCallback(({data, type}) => {\n    if (!type || !data || !data[0]) return data || {data: []};\n\n    const isFullType = type === 'full';\n\n    const currentData = {\n      page: isFullType ? 1 : 0,\n      sorted: {\n        id: 'desc',\n        firstName: 'desc',\n        lastName: 'desc',\n        email: 'desc',\n        phone: 'desc'\n      },\n      data: isFullType ? data.slice(0, delimiterPerPage) : data,\n    };\n\n    return {\n      ...currentData,\n      commonData: data,\n    }\n  }, []);\n  const prepareSearchData = useCallback((state, query) => {\n    const notFilteredState = prepareNewPageData(state, state.page);\n\n    if (!query) return notFilteredState;\n\n    const stringController = ({lowercase, trim} = {lowercase: true, trim: true}) => (\n      (string = '', subString = '') => {\n        if (!string || !subString) return null;\n\n        const formatString = (string) => {\n          let str = lowercase ? string.toLowerCase() : string;\n          str = str.split('').sort();\n          return trim ? str.filter(l => l.trim()) : str;\n        };\n\n        string = formatString(string);\n        subString = formatString(subString);\n\n        const result = [];\n\n        subString.forEach(ssLetter => {\n          //searching for subString letter in string\n          const temp = string.find(sLetter => sLetter === ssLetter);\n          //if something found\n          temp &&\n          //delete found var from string (to fix duplicate letters)\n          string.splice(string.indexOf(temp), 1) &&\n          //found var push to result array\n          result.push(temp);\n        });\n\n        //sort result array and transform to string to compare\n        return result.sort().join('') === subString.join('');\n      }\n    );\n    const subStringCheck = stringController({lowercase: true, trim: true});\n    const fields = Object.keys(sortedFields);\n    const filtered = notFilteredState.data.filter(element => (\n      Object.keys(element).some(key => (\n        fields.includes(key) && subStringCheck(String(element[key]), query)\n      ))\n    ));\n\n    return {...state, data: filtered};\n  }, []);\n  const reducer = useCallback((state, {type, payload}) => {\n    switch (type) {\n      case 'UPDATE':\n        return prepareData({data: payload.response, type: payload.tableType});\n      case 'SORT':\n        return {...state, data: payload.newData, sorted: payload.sorted};\n      case 'NEW_PAGE':\n        return prepareNewPageData(state, payload.page);\n      case 'SEARCH':\n        return prepareSearchData(state, payload.query);\n      case 'ADD':\n        return prepareNewUser(state, payload.userInfo);\n      default:\n        return state;\n    }\n  }, [prepareData, prepareSearchData]);\n  const [state, dispatch] = useReducer(reducer, {initialState, type}, prepareData);\n\n  return [state, dispatch];\n};\n\nexport default useData;\n","import React from \"react\"\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap'\nimport {delimiterPerPage, range, sortedFields} from \"../utils\"\n\nconst TablePagination = ({length, dispatch, setSortStatus, currentPage, setSelectedRow, setSearchQuery}) => {\n\n\n  return (\n    <Pagination size='xs'>\n      {range(1, Math.floor(length / delimiterPerPage)).map(i => {\n        const props = {\n          onClick: () => {\n            dispatch({type: 'NEW_PAGE', payload: {page: i}});\n            setSortStatus(sortedFields); //to update all the fields\n            setSelectedRow(''); //to remove selected field\n            setSearchQuery(''); //to empty the search field\n          },\n        };\n\n        return (\n          <PaginationItem active={currentPage === i} key={i}>\n            <PaginationLink {...props}>{i}</PaginationLink>\n          </PaginationItem>\n        )\n      })}\n    </Pagination>\n  )\n};\n\nexport default TablePagination;\n","import React from \"react\";\nimport {Form, FormGroup, Input, Button} from 'reactstrap';\n\nconst SearchTable = ({dispatch, setSelectedRow, value, setValue}) => {\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n\n    setSelectedRow('');\n    dispatch({type: 'SEARCH', payload: {query: value}});\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <FormGroup className='d-flex'>\n        <Input type='text' onChange={evt => setValue(evt.target.value)} value={value} placeholder='Что ищем?'/>\n        <Button>Поиск!</Button>\n      </FormGroup>\n    </Form>\n  )\n};\n\nexport default SearchTable;\n","import React from \"react\";\nimport {Form, FormGroup, Input, Label} from 'reactstrap';\n\nconst FullInfo = ({firstName, lastName, description, address: {streetAddress, city, state, zip}}) => (\n  <Form className='border p-3'>\n    <FormGroup>\n      <Label>Выбран пользователь {firstName} {lastName}</Label>\n    </FormGroup>\n    <FormGroup>\n      <Label>Описание</Label>\n      <Input type='textarea' value={description} readOnly style={{resize: 'none'}}/>\n    </FormGroup>\n    <FormGroup>\n      <Label>Адрес проживания: {streetAddress}</Label>\n    </FormGroup>\n    <FormGroup>\n      <Label>Город: {city}</Label>\n    </FormGroup>\n    <FormGroup>\n      <Label>Провинция/штата: {state}</Label>\n    </FormGroup>\n    <FormGroup>\n      <Label>Индекс: {zip}</Label>\n    </FormGroup>\n  </Form>\n);\n\nexport default FullInfo;\n","import React, {useEffect, useState} from \"react\";\nimport {Form, InputGroup, InputGroupAddon, InputGroupText, FormGroup, Input, Button} from 'reactstrap';\n\nconst AddMemberForm = ({dispatch, setVisible}) => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [formData, setFormData] = useState({\n    firstName, lastName, phone, email\n  });\n\n  useEffect(() => {\n    setFormData(() => ({firstName, lastName, phone, email}));\n  }, [firstName, lastName, phone, email]);\n\n  useEffect(() => {\n    setDisabled(Object.keys(formData).some(k => !Boolean(formData[k])))\n  }, [formData]);\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n    setEmail('');\n    setDisabled(true);\n    dispatch({type: 'ADD', payload: {userInfo: formData}});\n    setVisible(false);\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <InputGroup>\n        <InputGroupAddon addonType='prepend'>\n          <InputGroupText>firstName</InputGroupText>\n        </InputGroupAddon>\n        <Input value={firstName} onChange={evt => setFirstName(evt.target.value)}/>\n      </InputGroup>\n      <br/>\n      <InputGroup>\n        <InputGroupAddon addonType='prepend'>\n          <InputGroupText>lastName</InputGroupText>\n        </InputGroupAddon>\n        <Input value={lastName} onChange={evt => setLastName(evt.target.value)}/>\n      </InputGroup>\n      <br/>\n      <InputGroup>\n        <InputGroupAddon addonType='prepend'>\n          <InputGroupText>email</InputGroupText>\n        </InputGroupAddon>\n        <Input value={email} onChange={evt => setEmail(evt.target.value)}/>\n      </InputGroup>\n      <br/>\n      <InputGroup>\n        <InputGroupAddon addonType='prepend'>\n          <InputGroupText>phone</InputGroupText>\n        </InputGroupAddon>\n        <Input value={phone} onChange={evt => setPhone(evt.target.value)}/>\n      </InputGroup>\n      <br/>\n      <FormGroup>\n        <Button color='success' disabled={disabled}>add</Button>\n      </FormGroup>\n    </Form>\n  )\n};\n\nexport default AddMemberForm;\n","import React, {useState} from \"react\";\nimport {Button, Row} from 'reactstrap';\nimport AddMemberForm from \"./AddMemberForm\";\n\nconst AddMember = ({dispatch}) => {\n  const [visible, setVisible] = useState(false);\n\n\n  return (\n    <>\n      <Row className='mb-4'>\n        <Button color='primary' onClick={() => setVisible(state => !state)}>Add Member</Button>\n      </Row>\n      {visible &&\n        <Row>\n          <AddMemberForm dispatch={dispatch} setVisible={setVisible}/>\n        </Row>\n      }\n    </>\n  )\n};\n\nexport default AddMember;\n","import React, {useEffect, useState} from \"react\";\nimport {Table} from 'reactstrap';\nimport {Spinner, Row, ButtonDropdown, DropdownToggle} from \"reactstrap\";\n\nimport useFetch from \"../hooks/useFetch\";\nimport useData from \"../hooks/useData\";\nimport {sorting, sortedFields} from \"../utils\";\nimport TablePagination from \"./TablePagination\";\nimport SearchTable from \"./SearchTable\";\nimport FullInfo from \"./FullInfo\";\nimport AddMember from \"./AddMember\";\n\nconst DataTable = ({tableType}) => {\n  const getUrl = {\n    full: 'full',\n    partial: 'partial'\n  };\n  const [{response, isLoading, error}, doFetch] = useFetch(getUrl[tableType]);\n  const [data, dispatch] = useData(null);\n  const tableThData = [...Object.keys(sortedFields)];\n  const [sortStatus, setSortStatus] = useState(sortedFields);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const onThClick = (columnName) => {\n    const [newData, sorted] = sorting(columnName, data.data, data.sorted);\n    dispatch({type: 'SORT', payload: {newData, sorted}});\n  };\n  const onTrClick = id => {\n    setSelectedRow(id === selectedRow ? '' : id);\n  };\n\n  useEffect(() => doFetch(), [doFetch]);\n  useEffect(() => {\n    dispatch({type: 'UPDATE', payload: {response, tableType}})\n  }, [response, tableType, dispatch]);\n\n  const renderTable = ({data}) => {\n    return (\n      <Table dark\n             size='sm'\n             hover>\n        <thead>\n        <tr>\n          {tableThData.map(thName => (\n            <th onClick={() => onThClick(thName)}\n                key={thName}>\n              <ButtonDropdown toggle={() => {\n                setSortStatus(state => ({\n                  ...sortedFields,\n                  [thName]: state[thName] === 'desc' ? 'asc' : 'desc'\n                }))\n              }}\n                              direction={sortStatus[thName] === 'desc' ? 'down' : 'up'}>\n                <DropdownToggle caret>{thName}</DropdownToggle>\n              </ButtonDropdown>\n            </th>\n          ))}\n        </tr>\n        </thead>\n        <tbody>\n        {data.map(({id, firstName, lastName, email, phone}, i) => (\n          <tr key={i}\n              onClick={() => onTrClick(id)}\n              style={{backgroundColor: selectedRow === id && 'rgba(255, 255, 255, 0.075)'}}>\n            <td>{id}</td>\n            <td>{firstName}</td>\n            <td>{lastName}</td>\n            <td>{email}</td>\n            <td>{phone}</td>\n          </tr>\n        ))}\n        </tbody>\n      </Table>\n    )\n  };\n\n  if (isLoading || !data || !data.commonData)\n    return (\n      <Row className='d-flex justify-content-center'>\n        <Spinner color='primary'/>\n      </Row>\n    );\n\n  if (error)\n    return <div>Something goes wrong</div>;\n\n  const getTablePaginationProps = {\n    dispatch, setSortStatus, setSearchQuery, setSelectedRow,\n    length: data.commonData.length,\n    currentPage: data.page\n  };\n  const getSearchTableProps = {\n    dispatch, setSelectedRow,\n    value: searchQuery,\n    setValue: setSearchQuery\n  };\n  const getFullInfoProps = () => ({...data.data.find(e => e.id === selectedRow)});\n\n  return (\n    <>\n      <AddMember dispatch={dispatch}/>\n      <Row className='mb-4'>\n        <SearchTable {...getSearchTableProps}/>\n      </Row>\n      <Row>\n        {renderTable(data)}\n      </Row>\n      <Row>\n        {tableType === 'full' &&\n          <TablePagination {...getTablePaginationProps}/>}\n      </Row>\n      {selectedRow && <FullInfo {...getFullInfoProps()}/>}\n    </>\n  );\n};\n\nexport default DataTable;\n"],"sourceRoot":""}