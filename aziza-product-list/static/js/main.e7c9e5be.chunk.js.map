{"version":3,"sources":["serviceWorker.js","utils.js","pages/Home.js","pages/editor/Components/EditorInput.js","pages/editor/Components/Line.js","pages/editor/Components/EditorButton.js","pages/editor/reducer.js","pages/editor/index.js","routes.js","components/TopBar.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","urlPrefix","range","start","end","Array","keys","map","el","Home","Container","fluid","className","style","height","Button","color","to","EditorInput","type","rest","CustomInput","width","border","borderBottom","Line","onClick","linesState","col","xs","input","Row","i","Col","EditorButton","text","wrapperClassNames","size","reducer","payload","Editor","useState","lineNumber","setLineNumber","addLine","useReducer","value","setState","index","props","key","id","onChange","fontSize","borderRadius","display","justifyContent","alignItems","lineHeight","path","component","exact","TopBar","Navbar","dark","ReactDOM","render","document","querySelector","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e7c9e5be.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const urlPrefix = '/aziza-product-list';\nexport const range = (start, end) => (\n  [...Array(end).keys()].map(el => el + start)\n);\n","import React from \"react\"\nimport {Container, Button} from 'reactstrap'\nimport {NavLink} from \"react-router-dom\";\n\nimport {urlPrefix} from \"../utils\";\n\nconst Home = () => (\n  <Container fluid\n             className='d-flex justify-content-center align-items-center'\n             style={{height: '100vh'}}>\n    <Button color='success'>\n      <NavLink to={urlPrefix + '/editor'}\n               style={{color: 'inherit'}}\n               className='text-decoration-none'>Записывать!</NavLink>\n    </Button>\n  </Container>\n);\n\nexport default Home;\n","import React from \"react\"\nimport {CustomInput} from 'reactstrap'\n\nconst EditorInput = ({type = 'text', ...rest}) => (\n  <CustomInput type={type} {...rest} style={{width: '100%', border: 'none', borderBottom: '1px solid #fff'}} className='table-dark'/>\n);\n\nexport default EditorInput;\n","import React from \"react\";\nimport {Col, Row} from \"reactstrap\";\nimport EditorInput from \"./EditorInput\";\n\nimport {range} from \"../../../utils\";\n\nconst Line = ({onClick, ...rest}) => {\n  const linesState = [\n    {\n      col: {xs: 6},\n      input: {onClick: onClick,}\n    },\n    {\n      col: {xs: 3},\n    },\n    {\n      col: {xs: 3},\n      input: {type: 'number'}\n    }\n  ];\n\n  const renderItems = () => (\n    range(0, 3).map(i => (\n      <Col {...linesState[i].col}>\n        <EditorInput {...linesState[i].input}/>\n      </Col>\n    ))\n  );\n\n\n  return (\n    <Row className='mb-2'>\n      {renderItems()}\n    </Row>\n  )\n};\n\nexport default Line;\n","import React from \"react\"\nimport {Row, Button, Col} from 'reactstrap'\n\nconst EditorButton = ({text, color, wrapperClassNames, onClick = () => {}, ...rest}) => {\n\n\n  return (\n    <Row>\n      <Col xs='12' className={wrapperClassNames}>\n        <Button color={color}\n                size='xs'\n                className='mt-4'\n                onClick={onClick}\n                {...rest}>{text}</Button>\n      </Col>\n    </Row>\n  )\n};\n\nexport default EditorButton;\n","export const reducer = (state, {type, payload}) => {\n  switch (type) {\n    case '123':\n      return;\n    case '456':\n      return;\n    default:\n      return state;\n  }\n};\n","import React, {useReducer, useState} from \"react\";\nimport {Container, Row, Col} from 'reactstrap';\n\nimport './style.css';\n\nimport Line from \"./Components/Line\";\nimport {range} from \"../../utils\";\nimport EditorButton from \"./Components/EditorButton\";\nimport {reducer} from \"./reducer\";\n\nconst Editor = () => {\n  const [lineNumber, setLineNumber] = useState(1);\n\n  const addLine = () => setLineNumber(state => state + 1);\n  const [state, setState] = useReducer(reducer, {}, value => value);\n  const renderLines = () => (\n    range(1, lineNumber).map(index => {\n      const props = {\n        key: index,\n        id: index,\n        onChange: setState,\n        state: state,\n        onClick: () => index === lineNumber && addLine(),\n      };\n\n      return <Line {...props}/>\n    })\n  );\n\n  return (\n    <Container className='table-dark'\n               style={{height: '100vh'}}\n               fluid>\n      <Row>\n        <Col xs='6'>Продукт</Col>\n        <Col xs='3'>Кол-во</Col>\n        <Col xs='3'>Цена</Col>\n      </Row>\n      {renderLines()}\n      <EditorButton text='+'\n                    color='danger'\n                    wrapperClassNames='justify-content-end d-flex'\n                    onClick={addLine}\n                    style={{\n                      fontSize: '30px',\n                      borderRadius: '50%',\n                      width: '40px',\n                      height: '40px',\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      lineHeight: '0'\n                    }}/>\n      <EditorButton text='Записать!'\n                    color='success'/>\n    </Container>\n  )\n};\n\nexport default Editor;\n","import React from \"react\";\nimport {Switch, Route} from 'react-router-dom';\n\nimport {urlPrefix} from \"./utils\";\nimport Home from \"./pages/Home\";\nimport Editor from \"./pages/editor\";\n\nexport default () =>\n  (\n    <Switch>\n      <Route path={urlPrefix + '/'} component={Home} exact/>\n      <Route path={urlPrefix + '/editor'} component={Editor}/>\n      {/*<Route path='*' component={NoMatch}/>*/}\n    </Switch>\n  );\n","import React from \"react\";\nimport {Navbar} from 'reactstrap';\nimport {Link} from \"react-router-dom\";\n\nimport {urlPrefix} from \"../utils\";\n\nconst TopBar = () => (\n  <Navbar dark color='dark' className='pb-5'>\n    <Link to={urlPrefix + '/'} className='alert-link text-light ml-auto'>Главная страница</Link>\n  </Navbar>\n);\n\nexport default TopBar;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Routes from './routes';\nimport TopBar from \"./components/TopBar\";\n\n\nconst App = () => (\n    <BrowserRouter>\n      <TopBar/>\n      <Routes/>\n    </BrowserRouter>\n);\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}