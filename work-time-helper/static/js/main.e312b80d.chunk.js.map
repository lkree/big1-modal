{"version":3,"sources":["misc/actions.ts","misc/constants.ts","misc/utils.ts","reducers/rootReducers.ts","contexts/AppContext.ts","components/InputItem.tsx","components/ContentContainer.tsx","components/App.tsx","hooks/useLocalStorage.ts","index.tsx"],"names":["Actions","initialState","workDayLength","MINUTES_IN_HOUR","mainWorkTime","additionalWorkTime","alreadyMainWorked","alreadyAdditionalWorked","clone","data","result","deep","isArray","Array","isDate","Date","isDataObject","isObject","forEach","v","push","Object","keys","k","totalCalc","additionalWorkedTime","Math","round","calcWorkAmount","worked","formatDate","value","workRemainderType","minutes","floor","hours","length","stateModifiers","MAIN_WORK_TIME_CHANGE","state","payload","ADDITIONAL_WORK_TIME_CHANGE","WORK_DAY_LENGTH_CHANGE","ALREADY_MAIN_WORKED_TIME_CHANGE","ALREADY_ADDITIONAL_WORKED_TIME_CHANGE","IMPORT_DATA","countersData","JSON","parse","localStorage","getItem","currentDayStart","setHours","currentDayEnd","ids","filter","id","name","savedTime","rootReducer","action","newState","type","setStorageState","AppContext","createContext","InputItem","labelText","children","rest","FormGroup","Label","for","Input","ContentContainer","className","useContext","dispatch","useState","setWorkRemainderType","title","style","top","right","cursor","onClick","Form","placeholder","onChange","target","disabled","readOnly","App","wrapperKey","commonState","initialKeys","dataForStorage","setItem","stringify","savedState","undefined","record","setState","resultState","useLocalStorage","storageState","useReducer","Provider","Container","fluid","minHeight","padding","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e312b80d.chunk.js","sourcesContent":["export enum Actions {\r\n    MAIN_WORK_TIME_CHANGE = 'mainWorkTimeChange',\r\n    ADDITIONAL_WORK_TIME_CHANGE = 'additionalWorkTimeChange',\r\n    WORK_DAY_LENGTH_CHANGE = 'workDayLengthChange',\r\n    ALREADY_MAIN_WORKED_TIME_CHANGE = 'alreadyMainWorkedTimeChange',\r\n    ALREADY_ADDITIONAL_WORKED_TIME_CHANGE = 'alreadyAdditionalWorkedTimeChange',\r\n    IMPORT_DATA = 'importData'\r\n}\r\n","export const MINUTES_IN_HOUR = 60;\r\nexport const STANDARD_WORK_DAY = 8;\r\nexport const MILLISECONDS_IN_SECOND = 1000;\r\nexport const MILLISECONDS_IN_MINUTE = MILLISECONDS_IN_SECOND * 60;\r\nexport const MILLISECONDS_IN_HOUR = MILLISECONDS_IN_MINUTE * MINUTES_IN_HOUR;\r\nexport const MILLISECONDS_IN_DAY = MILLISECONDS_IN_HOUR * 24;\r\n\r\nexport const initialState = {\r\n    workDayLength: MINUTES_IN_HOUR * STANDARD_WORK_DAY,\r\n    mainWorkTime: 0,\r\n    additionalWorkTime: 0,\r\n    alreadyMainWorked: 0,\r\n    alreadyAdditionalWorked: 0\r\n}\r\n","import { IState } from './interfaces';\r\nimport { MINUTES_IN_HOUR } from './constants';\r\n\r\ninterface ITotalCalcProps {\r\n    mainWorkTime: number;\r\n    additionalWorkTime: number;\r\n    workDayLength: number;\r\n    alreadyMainWorked: number;\r\n    alreadyAdditionalWorked: number;\r\n}\r\n\r\ninterface IWorkAmountProps extends ITotalCalcProps {\r\n\r\n}\r\n\r\nexport const clone = <T extends unknown>(data: T, deep: boolean = false): T => {\r\n    const isArray = Array.isArray(data);\r\n    const isDate = data instanceof Date;\r\n    const isDataObject = isObject(data);\r\n\r\n    if (isDate) return new Date(data as Date) as T;\r\n\r\n    if (!deep) {\r\n        if (isArray) return [...data as unknown[]] as T;\r\n        if (isDataObject) return { ...data as object } as T;\r\n    }\r\n\r\n    if (!isArray && !isDataObject) {\r\n        return data;\r\n    }\r\n\r\n    let result: T;\r\n\r\n    if (isArray) {\r\n        result = [] as T;\r\n\r\n        (data as unknown[]).forEach((v) => (result as unknown[]).push(clone(v, deep)));\r\n\r\n        return result;\r\n    }\r\n\r\n    result = {} as T;\r\n\r\n    (Object.keys(data as object) as (keyof T)[]).forEach((k) => (result[k] as T) = clone(data[k] as T, deep));\r\n\r\n    return result;\r\n}\r\n\r\nconst isObject = (data: unknown): data is object => {\r\n    return typeof data === 'object' && !Array.isArray(data) && data !== null && !(data instanceof Date);\r\n}\r\n\r\nexport const stateStringToNumbers = (state: IState) => {\r\n    (Object.keys(state) as (keyof IState)[]).forEach(k => state[k] = +state[k]);\r\n\r\n    return state;\r\n}\r\n\r\nexport const totalCalc = ({ additionalWorkTime, mainWorkTime, workDayLength, alreadyAdditionalWorked, alreadyMainWorked }: ITotalCalcProps): number => {\r\n    if (!mainWorkTime && !additionalWorkTime) return 0;\r\n\r\n    if (!mainWorkTime) return workDayLength;\r\n\r\n    let additionalWorkedTime: number = 0;\r\n\r\n    if (alreadyAdditionalWorked && alreadyAdditionalWorked > additionalWorkTime) {\r\n        additionalWorkedTime = (alreadyAdditionalWorked - additionalWorkTime) / (workDayLength / mainWorkTime);\r\n    }\r\n\r\n    return Math.round(mainWorkTime - alreadyMainWorked - additionalWorkedTime);\r\n}\r\n\r\nexport const calcWorkAmount = ({ additionalWorkTime, mainWorkTime, workDayLength, alreadyAdditionalWorked, alreadyMainWorked }: IWorkAmountProps): number => {\r\n    if (!mainWorkTime) return 0;\r\n\r\n    if (!alreadyAdditionalWorked && !alreadyMainWorked) return 0;\r\n\r\n    let worked: number = 0;\r\n\r\n    if (alreadyAdditionalWorked && alreadyAdditionalWorked > additionalWorkTime) {\r\n        if (!alreadyMainWorked) worked += alreadyAdditionalWorked;\r\n        else worked += alreadyAdditionalWorked - additionalWorkTime;\r\n    }\r\n\r\n    return Math.round((workDayLength / mainWorkTime) * alreadyMainWorked + worked);\r\n}\r\n\r\nexport const formatDate = (value: number, workRemainderType: 'minutes' | 'hours') => {\r\n    if (workRemainderType === 'minutes') return value ?? '';\r\n\r\n    const minutes = `${Math.floor(value % MINUTES_IN_HOUR)}`;\r\n    const hours = `${Math.floor(value / MINUTES_IN_HOUR)}`;\r\n\r\n    return `${hours.length === 1 ? '0' + hours : hours} : ${minutes.length === 1 ? '0' + minutes : minutes}`;\r\n}\r\n","import { IState, IAction } from '../misc/interfaces';\r\nimport { Actions } from '../misc/actions';\r\nimport { clone } from '../misc/utils';\r\n\r\ntype MainWorkTimeChangeProps = Pick<IAction, 'payload'>;\r\ntype AdditionalWorkTimeChangeProps = Pick<IAction, 'payload'>;\r\ntype AlreadyMainWorkedTimeChange = Pick<IAction, 'payload'>;\r\ntype AlreadyAdditionalWorkedTimeChange = Pick<IAction, 'payload'>;\r\ntype WorkDayLengthChangeProps = Pick<IAction, 'payload'>;\r\n\r\nconst stateModifiers = {\r\n    [Actions.MAIN_WORK_TIME_CHANGE]: (state: IState, { payload }: MainWorkTimeChangeProps): IState => ({\r\n        ...state,\r\n        mainWorkTime: payload\r\n    }),\r\n    [Actions.ADDITIONAL_WORK_TIME_CHANGE]: (state: IState, { payload }: AdditionalWorkTimeChangeProps): IState => ({\r\n        ...state,\r\n        additionalWorkTime: payload\r\n    }),\r\n    [Actions.WORK_DAY_LENGTH_CHANGE]: (state: IState, { payload }: WorkDayLengthChangeProps): IState => ({\r\n        ...state,\r\n        workDayLength: payload\r\n    }),\r\n    [Actions.ALREADY_MAIN_WORKED_TIME_CHANGE]: (state: IState, { payload }: AlreadyMainWorkedTimeChange) => ({\r\n        ...state,\r\n        alreadyMainWorked: payload\r\n    }),\r\n    [Actions.ALREADY_ADDITIONAL_WORKED_TIME_CHANGE]: (state: IState, { payload }: AlreadyAdditionalWorkedTimeChange) => ({\r\n        ...state,\r\n        alreadyAdditionalWorked: payload\r\n    }),\r\n    [Actions.IMPORT_DATA]: (state: IState) => {\r\n        const countersData = JSON.parse(localStorage.getItem('counters') || '');\r\n\r\n        if (!countersData) return state;\r\n\r\n        const currentDayStart = +new Date(new Date().setHours(0, 0, 0, 0));\r\n        const currentDayEnd = +new Date(new Date().setHours(23, 59, 59, 59));\r\n\r\n        const ids = countersData.ids?.filter((id: number) => +id <= currentDayEnd && +id >= currentDayStart);\r\n\r\n        if (ids.length) {\r\n            ids.forEach((id: number) => {\r\n                if (countersData.data[id].name === 'программирование') state.alreadyMainWorked = Math.floor(countersData.data[id].savedTime / 60) ?? 0;\r\n                if (countersData.data[id].name === 'остальное') state.alreadyAdditionalWorked = Math.floor(countersData.data[id].savedTime / 60) ?? 0;\r\n            });\r\n        }\r\n\r\n        return state;\r\n    }\r\n}\r\n\r\nexport const rootReducer = (state: IState, action: IAction): IState => {\r\n    const newState = stateModifiers[action.type](clone(state, true), action);\r\n\r\n    action.setStorageState(newState);\r\n\r\n    return newState;\r\n}\r\n","import { IAction } from '../misc/interfaces';\r\nimport { initialState } from '../misc/constants';\r\nimport { createContext } from 'react';\r\n\r\nexport const AppContext = createContext([initialState, (data: Omit<IAction, 'setStorageState'>) => {}] as const);\r\n","import { FormGroup, Input, Label } from 'reactstrap';\r\nimport { InputType } from 'reactstrap/es/Input';\r\nimport { HTMLAttributes } from 'react';\r\n\r\ninterface IProps extends HTMLAttributes<HTMLInputElement> {\r\n    labelText?: string;\r\n    type?: InputType;\r\n    value?: string | number;\r\n    disabled?: boolean;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport const InputItem = ({ labelText, children, id, value, ...rest }: IProps = { type: 'number' }) => {\r\n\r\n    return (\r\n        <FormGroup>\r\n            <Label for={ id }>{ labelText }</Label>\r\n            <Input name={ id } id={ id } value={ value || value === 0 ? value : '' } { ...rest } />\r\n            { children }\r\n        </FormGroup>\r\n    )\r\n}\r\n","import { ChangeEventHandler, HTMLAttributes, useContext, useState } from 'react';\r\nimport { calcWorkAmount, formatDate, totalCalc } from '../misc/utils';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport { Actions } from '../misc/actions';\r\nimport { InputItem } from './InputItem';\r\nimport { Form } from 'reactstrap';\r\n\r\ninterface IProps extends HTMLAttributes<HTMLDivElement> {}\r\n\r\nexport const ContentContainer = ({ className, ...rest }: IProps) => {\r\n    const [state, dispatch] = useContext(AppContext);\r\n    const [workRemainderType, setWorkRemainderType] = useState<'minutes' | 'hours'>('minutes');\r\n\r\n    const onWorkDayLengthChange: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => dispatch({ type: Actions.WORK_DAY_LENGTH_CHANGE, payload: +value });\r\n    const onMainJobTimeChange: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => dispatch({ type: Actions.MAIN_WORK_TIME_CHANGE, payload: +value });\r\n    const onAdditionalJobTimeChange: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => dispatch({ type: Actions.ADDITIONAL_WORK_TIME_CHANGE, payload: +value });\r\n    const onWorkedMainChange: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => dispatch({ type: Actions.ALREADY_MAIN_WORKED_TIME_CHANGE, payload: +value });\r\n    const onAdditionalWorked: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => dispatch({ type: Actions.ALREADY_ADDITIONAL_WORKED_TIME_CHANGE, payload: +value });\r\n    const onClickChangeWorkRemainder = () => setWorkRemainderType(value => value === 'minutes' ? 'hours' : 'minutes');\r\n    const onImportDataClick = () => dispatch({ type: Actions.IMPORT_DATA });\r\n\r\n    return (\r\n        <div className=\"w-100 content-container\">\r\n            <div className={`p-3 position-relative ${className}`} { ...rest }>\r\n                <span className=\"position-absolute\"\r\n                      title=\"импортировать данные\"\r\n                      style={{ top: 5, right: 10, cursor: 'pointer' }}\r\n                      onClick={ onImportDataClick }>\r\n                        &#9986;\r\n                </span>\r\n\r\n                <Form>\r\n                    <InputItem id=\"workTimeLength\"\r\n                               labelText=\"Длительность рабочего дня\"\r\n                               placeholder=\"Длительность рабочего дня\"\r\n                               value={ state.workDayLength }\r\n                               onChange={ onWorkDayLengthChange } />\r\n                    <InputItem id=\"mainWorkTime\"\r\n                               labelText=\"Основной рабочий эквивалент\"\r\n                               placeholder=\"Эквивалент 8 рабочим часам\"\r\n                               value={ state.mainWorkTime }\r\n                               onChange={ onMainJobTimeChange } />\r\n                    <InputItem id=\"additionalWorkTime\"\r\n                               labelText=\"Дополнительное необязательно время\"\r\n                               placeholder=\"Дополнительное время, которое невключено в основное, но тоже можно отработать\"\r\n                               value={ state.additionalWorkTime }\r\n                               onChange={ onAdditionalJobTimeChange } />\r\n                </Form>\r\n            </div>\r\n\r\n            <div className={`p-3 mt-5 ${className}`} { ...rest }>\r\n                <Form>\r\n                    <InputItem id=\"workedMain\"\r\n                               labelText=\"Отработано основного времени\"\r\n                               placeholder=\"Сколько основного отработано\"\r\n                               value={ state.alreadyMainWorked }\r\n                               onChange={ onWorkedMainChange } />\r\n                    <InputItem id=\"workedAdditional\"\r\n                               labelText=\"Отработано дополнительного времени\"\r\n                               placeholder=\"Сколько дополнительного отработано\"\r\n                               value={ state.alreadyAdditionalWorked }\r\n                               onChange={ onAdditionalWorked } />\r\n                </Form>\r\n            </div>\r\n\r\n            <div className={`p-3 mt-5 ${className}`} { ...rest }>\r\n                <Form className='position-relative'>\r\n                    <InputItem id=\"totalWorkTime\"\r\n                               type=\"text\"\r\n                               placeholder=\"Введите время выше и получите рассчёт\"\r\n                               labelText='Всего необходимо отработать'\r\n                               value={ formatDate(totalCalc(state), workRemainderType) }\r\n                               disabled\r\n                               readOnly>\r\n                        <span className=\"position-absolute\"\r\n                              title=\"сменить способ показа времени\"\r\n                              style={{ top: -5, right: 10, cursor: 'pointer' }}\r\n                              onClick={ onClickChangeWorkRemainder }>\r\n                            &#9854;\r\n                        </span>\r\n                    </InputItem>\r\n\r\n                    <InputItem id=\"totalWorkTime\"\r\n                               type=\"text\"\r\n                               placeholder=\"Введите время выше и получите рассчёт\"\r\n                               labelText='Уже отработано в пересчете на длительность рабочего дня'\r\n                               value={ formatDate(calcWorkAmount(state), workRemainderType) }\r\n                               disabled\r\n                               readOnly />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useLocalStorage } from '../hooks/useLocalStorage';\r\nimport { rootReducer } from '../reducers/rootReducers';\r\nimport { ContentContainer } from './ContentContainer';\r\nimport { IState, IAction } from '../misc/interfaces';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport { initialState } from '../misc/constants';\r\nimport { Container } from 'reactstrap';\r\nimport { useReducer } from 'react';\r\n\r\nimport './App.sass';\r\n\r\nexport const App = () => {\r\n    const [storageState, setStorageState] = useLocalStorage({ keys: Object.keys(initialState) as Array<keyof IState>, wrapperKey: 'workTimeHelper' });\r\n    const [state, dispatch] = useReducer<typeof rootReducer>(rootReducer, { ...initialState, ...storageState });\r\n    const customDispatch = (data: Omit<IAction, 'setStorageState'>) => dispatch({ ...data, setStorageState } as IAction);\r\n\r\n    return (\r\n        <AppContext.Provider value={[state, customDispatch]}>\r\n            <Container fluid className=\"bg-dark d-flex justify-content-center\" style={{ minHeight: '100vh', padding: '70px 3rem 20px' }}>\r\n                <ContentContainer className=\"bg-white\" />\r\n            </Container>\r\n        </AppContext.Provider>\r\n    )\r\n};\r\n","import { IState } from '../misc/interfaces';\r\nimport { useState } from 'react';\r\n\r\ntype UseLocalStorage = ({ keys, initialState, wrapperKey }: { keys: Array<keyof IState>, initialState?: IState, wrapperKey?: string }) => [Partial<IState>, Function];\r\ntype ISetStorageProps = ((state: IState) => IState) | IState;\r\n\r\n\r\nexport const useLocalStorage: UseLocalStorage = ({ keys, initialState, wrapperKey }) => {\r\n   const commonState = {} as IState;\r\n\r\n   if (initialState) {\r\n      const initialKeys = Object.keys(initialState) as Array<keyof IState>;\r\n\r\n      if (wrapperKey) {\r\n         const dataForStorage: Record<string, unknown> = {};\r\n\r\n         initialKeys.forEach(k => dataForStorage[k] = initialState[k]);\r\n         localStorage.setItem(wrapperKey, JSON.stringify(dataForStorage));\r\n      } else {\r\n         initialKeys.forEach(k => localStorage.setItem(k, JSON.stringify(initialState[k])));\r\n      }\r\n   }\r\n\r\n   if (wrapperKey) {\r\n      const savedState = JSON.parse(localStorage.getItem(wrapperKey) as string);\r\n\r\n      savedState && Object.keys(savedState).forEach(k => {\r\n         if (savedState[k] !== null && savedState[k] !== undefined) commonState[k as keyof IState] = savedState[k];\r\n      });\r\n   } else {\r\n      keys.forEach(k => {\r\n         const record = JSON.parse(localStorage.getItem(k) as string);\r\n\r\n         if (record !== null && record !== undefined) commonState[k] = record;\r\n      });\r\n   }\r\n\r\n   const [state, setState] = useState(commonState);\r\n\r\n   const storageSetState = (newState: ISetStorageProps) => {\r\n      let resultState: IState;\r\n\r\n      if (typeof newState === 'function') {\r\n         resultState = { ...state, ...newState(state) };\r\n      } else {\r\n         resultState = { ...state, ...newState };\r\n      }\r\n\r\n      if (wrapperKey) localStorage.setItem(wrapperKey, JSON.stringify(resultState))\r\n      else keys.forEach(k => localStorage.setItem(k, JSON.stringify(resultState[k])));\r\n\r\n      setState(resultState);\r\n   };\r\n\r\n   return [state, storageSetState];\r\n}\r\n","import { default as ReactDOM } from 'react-dom';\r\nimport { App } from './components/App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}