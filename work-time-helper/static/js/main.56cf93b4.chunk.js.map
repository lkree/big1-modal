{"version":3,"sources":["misc/actions.ts","misc/utils.ts","reducers/rootReducers.ts","misc/constants.ts","contexts/AppContext.ts","components/InputItem.tsx","components/ContentContainer.tsx","components/App.tsx","hooks/useLocalStorage.ts","index.tsx"],"names":["Actions","clone","data","result","deep","isArray","Array","isDate","Date","isDataObject","isObject","forEach","v","push","Object","keys","k","stateModifiers","MAIN_WORK_TIME_CHANGE","state","payload","mainWorkTime","ADDITIONAL_WORK_TIME_CHANGE","additionalWorkTime","WORK_DAY_LENGTH_CHANGE","workDayLength","ALREADY_MAIN_WORKED_TIME_CHANGE","alreadyMainWorked","ALREADY_ADDITIONAL_WORKED_TIME_CHANGE","alreadyAdditionalWorked","IMPORT_DATA","countersData","JSON","parse","localStorage","getItem","currentDayStart","setHours","currentDayEnd","ids","filter","id","length","name","Math","floor","savedTime","calcTotal","workRemainder","additionalWorkedTime","round","totalCalc","rootReducer","action","newState","type","setStorageState","initialState","MINUTES_IN_HOUR","AppContext","createContext","InputItem","labelText","children","value","rest","FormGroup","Label","for","Input","ContentContainer","className","useContext","dispatch","useState","workRemainderType","setWorkRemainderType","title","style","top","right","cursor","onClick","Form","placeholder","onChange","target","minutes","hours","getWorkRemainder","disabled","readOnly","App","wrapperKey","commonState","initialKeys","dataForStorage","setItem","stringify","savedState","undefined","record","setState","resultState","useLocalStorage","storageState","useReducer","Provider","Container","fluid","minHeight","padding","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.56cf93b4.chunk.js","sourcesContent":["export enum Actions {\r\n    MAIN_WORK_TIME_CHANGE = 'mainWorkTimeChange',\r\n    ADDITIONAL_WORK_TIME_CHANGE = 'additionalWorkTimeChange',\r\n    WORK_DAY_LENGTH_CHANGE = 'workDayLengthChange',\r\n    ALREADY_MAIN_WORKED_TIME_CHANGE = 'alreadyMainWorkedTimeChange',\r\n    ALREADY_ADDITIONAL_WORKED_TIME_CHANGE = 'alreadyAdditionalWorkedTimeChange',\r\n    IMPORT_DATA = 'importData'\r\n}\r\n","import { IState } from './interfaces';\r\n\r\ninterface ITotalCalcProps {\r\n    mainWorkTime: number;\r\n    additionalWorkTime: number;\r\n    workDayLength: number;\r\n    alreadyMainWorked: number;\r\n    alreadyAdditionalWorked: number;\r\n}\r\n\r\nexport const clone = <T extends unknown>(data: T, deep: boolean = false): T => {\r\n    const isArray = Array.isArray(data);\r\n    const isDate = data instanceof Date;\r\n    const isDataObject = isObject(data);\r\n\r\n    if (isDate) return new Date(data as Date) as T;\r\n\r\n    if (!deep) {\r\n        if (isArray) return [...data as unknown[]] as T;\r\n        if (isDataObject) return { ...data as object } as T;\r\n    }\r\n\r\n    if (!isArray && !isDataObject) {\r\n        return data;\r\n    }\r\n\r\n    let result: T;\r\n\r\n    if (isArray) {\r\n        result = [] as T;\r\n\r\n        (data as unknown[]).forEach((v) => (result as unknown[]).push(clone(v, deep)));\r\n\r\n        return result;\r\n    }\r\n\r\n    result = {} as T;\r\n\r\n    (Object.keys(data as object) as (keyof T)[]).forEach((k) => (result[k] as T) = clone(data[k] as T, deep));\r\n\r\n    return result;\r\n}\r\n\r\nconst isObject = (data: unknown): data is object => {\r\n    return typeof data === 'object' && !Array.isArray(data) && data !== null && !(data instanceof Date);\r\n}\r\n\r\nexport const stateStringToNumbers = (state: IState) => {\r\n    (Object.keys(state) as (keyof IState)[]).forEach(k => state[k] = +state[k]);\r\n\r\n    return state;\r\n}\r\n\r\nexport const totalCalc = ({ additionalWorkTime, mainWorkTime, workDayLength, alreadyAdditionalWorked, alreadyMainWorked }: ITotalCalcProps): number => {\r\n    if (!mainWorkTime && !additionalWorkTime) return 0;\r\n\r\n    if (!mainWorkTime) return workDayLength;\r\n\r\n    let additionalWorkedTime: number = 0;\r\n\r\n    if (alreadyAdditionalWorked && alreadyAdditionalWorked > additionalWorkTime) {\r\n        additionalWorkedTime = (alreadyAdditionalWorked - additionalWorkTime) / (workDayLength / mainWorkTime);\r\n    }\r\n\r\n    return Math.round(mainWorkTime - alreadyMainWorked - additionalWorkedTime);\r\n}\r\n","import { IState, IAction } from '../misc/interfaces';\r\nimport { clone, totalCalc } from '../misc/utils';\r\nimport { Actions } from '../misc/actions';\r\n\r\ntype MainWorkTimeChangeProps = Pick<IAction, 'payload'>;\r\ntype AdditionalWorkTimeChangeProps = Pick<IAction, 'payload'>;\r\ntype AlreadyMainWorkedTimeChange = Pick<IAction, 'payload'>;\r\ntype AlreadyAdditionalWorkedTimeChange = Pick<IAction, 'payload'>;\r\ntype WorkDayLengthChangeProps = Pick<IAction, 'payload'>;\r\n\r\nconst stateModifiers = {\r\n    [Actions.MAIN_WORK_TIME_CHANGE]: (state: IState, { payload }: MainWorkTimeChangeProps): IState => ({\r\n        ...state,\r\n        mainWorkTime: payload\r\n    }),\r\n    [Actions.ADDITIONAL_WORK_TIME_CHANGE]: (state: IState, { payload }: AdditionalWorkTimeChangeProps): IState => ({\r\n        ...state,\r\n        additionalWorkTime: payload\r\n    }),\r\n    [Actions.WORK_DAY_LENGTH_CHANGE]: (state: IState, { payload }: WorkDayLengthChangeProps): IState => ({\r\n        ...state,\r\n        workDayLength: payload\r\n    }),\r\n    [Actions.ALREADY_MAIN_WORKED_TIME_CHANGE]: (state: IState, { payload }: AlreadyMainWorkedTimeChange) => ({\r\n        ...state,\r\n        alreadyMainWorked: payload\r\n    }),\r\n    [Actions.ALREADY_ADDITIONAL_WORKED_TIME_CHANGE]: (state: IState, { payload }: AlreadyAdditionalWorkedTimeChange) => ({\r\n        ...state,\r\n        alreadyAdditionalWorked: payload\r\n    }),\r\n    [Actions.IMPORT_DATA]: (state: IState) => {\r\n        const countersData = JSON.parse(localStorage.getItem('counters') || '');\r\n\r\n        if (!countersData) return state;\r\n\r\n        const currentDayStart = +new Date(new Date().setHours(0, 0, 0, 0));\r\n        const currentDayEnd = +new Date(new Date().setHours(23, 59, 59, 59));\r\n\r\n        const ids = countersData.ids?.filter((id: number) => +id <= currentDayEnd && +id >= currentDayStart);\r\n\r\n        if (ids.length) {\r\n            ids.forEach((id: number) => {\r\n                if (countersData.data[id].name === 'программирование') state.alreadyMainWorked = Math.floor(countersData.data[id].savedTime / 60) ?? 0;\r\n                if (countersData.data[id].name === 'остальное') state.alreadyAdditionalWorked = Math.floor(countersData.data[id].savedTime / 60) ?? 0;\r\n            });\r\n        }\r\n\r\n        return state;\r\n    }\r\n}\r\n\r\nconst calcTotal = (state: IState) => {\r\n    state.workRemainder = totalCalc(state);\r\n}\r\n\r\nexport const rootReducer = (state: IState, action: IAction): IState => {\r\n    const newState = stateModifiers[action.type](clone(state, true), action);\r\n\r\n    calcTotal(newState);\r\n\r\n    action.setStorageState(newState);\r\n\r\n    return newState;\r\n}\r\n","export const MINUTES_IN_HOUR = 60;\r\nexport const STANDARD_WORK_DAY = 8;\r\nexport const MILLISECONDS_IN_SECOND = 1000;\r\nexport const MILLISECONDS_IN_MINUTE = MILLISECONDS_IN_SECOND * 60;\r\nexport const MILLISECONDS_IN_HOUR = MILLISECONDS_IN_MINUTE * MINUTES_IN_HOUR;\r\nexport const MILLISECONDS_IN_DAY = MILLISECONDS_IN_HOUR * 24;\r\n\r\nexport const initialState = {\r\n    workDayLength: MINUTES_IN_HOUR * STANDARD_WORK_DAY,\r\n    mainWorkTime: 0,\r\n    additionalWorkTime: 0,\r\n    workRemainder: MINUTES_IN_HOUR * STANDARD_WORK_DAY,\r\n    alreadyMainWorked: 0,\r\n    alreadyAdditionalWorked: 0\r\n}\r\n","import { IAction } from '../misc/interfaces';\r\nimport { initialState } from '../misc/constants';\r\nimport { createContext } from 'react';\r\n\r\nexport const AppContext = createContext([initialState, (data: Omit<IAction, 'setStorageState'>) => {}] as const);\r\n","import { FormGroup, Input, Label } from 'reactstrap';\r\nimport { InputType } from 'reactstrap/es/Input';\r\nimport { HTMLAttributes } from 'react';\r\n\r\ninterface IProps extends HTMLAttributes<HTMLInputElement> {\r\n    labelText?: string;\r\n    type?: InputType;\r\n    value?: string | number;\r\n    disabled?: boolean;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport const InputItem = ({ labelText, children, id, value, ...rest }: IProps = { type: 'number' }) => {\r\n\r\n    return (\r\n        <FormGroup>\r\n            <Label for={ id }>{ labelText }</Label>\r\n            <Input name={ id } id={ id } value={ value ? value : '' } { ...rest } />\r\n            { children }\r\n        </FormGroup>\r\n    )\r\n}\r\n","import { ChangeEventHandler, HTMLAttributes, useContext, useState } from 'react';\r\nimport { MINUTES_IN_HOUR } from '../misc/constants';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport { Actions } from '../misc/actions';\r\nimport { InputItem } from './InputItem';\r\nimport { Form } from 'reactstrap';\r\n\r\ninterface IProps extends HTMLAttributes<HTMLDivElement> {}\r\n\r\nexport const ContentContainer = ({ className, ...rest }: IProps) => {\r\n    const [state, dispatch] = useContext(AppContext);\r\n    const [workRemainderType, setWorkRemainderType] = useState('minutes');\r\n\r\n    const onWorkDayLengthChange: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => dispatch({ type: Actions.WORK_DAY_LENGTH_CHANGE, payload: +value });\r\n    const onMainJobTimeChange: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => dispatch({ type: Actions.MAIN_WORK_TIME_CHANGE, payload: +value });\r\n    const onAdditionalJobTimeChange: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => dispatch({ type: Actions.ADDITIONAL_WORK_TIME_CHANGE, payload: +value });\r\n    const onWorkedMainChange: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => dispatch({ type: Actions.ALREADY_MAIN_WORKED_TIME_CHANGE, payload: +value });\r\n    const onAdditionalWorked: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => dispatch({ type: Actions.ALREADY_ADDITIONAL_WORKED_TIME_CHANGE, payload: +value });\r\n    const onClickChangeWorkRemainder = () => setWorkRemainderType(value => value === 'minutes' ? 'hours' : 'minutes');\r\n    const onImportDataClick = () => dispatch({ type: Actions.IMPORT_DATA });\r\n\r\n    const getWorkRemainder = () => {\r\n        if (workRemainderType === 'minutes') return state.workRemainder ?? '';\r\n\r\n        const minutes = `${Math.floor(state.workRemainder % MINUTES_IN_HOUR)}`;\r\n        const hours = `${Math.floor(state.workRemainder / MINUTES_IN_HOUR)}`;\r\n\r\n        return `${hours.length === 1 ? '0' + hours : hours} : ${minutes.length === 1 ? '0' + minutes : minutes}`;\r\n    }\r\n\r\n    return (\r\n        <div className='w-100 content-container'>\r\n            <div className={`p-3 position-relative ${className}`} { ...rest }>\r\n                <span className=\"position-absolute\"\r\n                      title=\"импортировать данные\"\r\n                      style={{ top: 5, right: 10, cursor: 'pointer' }}\r\n                      onClick={ onImportDataClick }>\r\n                        &#9986;\r\n                </span>\r\n\r\n                <Form>\r\n                    <InputItem id=\"workTimeLength\"\r\n                               labelText=\"Длительность рабочего дня\"\r\n                               placeholder=\"Длительность рабочего дня\"\r\n                               value={ state.workDayLength }\r\n                               onChange={ onWorkDayLengthChange } />\r\n                    <InputItem id=\"mainWorkTime\"\r\n                               labelText=\"Основной рабочий эквивалент\"\r\n                               placeholder=\"Эквивалент 8 рабочим часам\"\r\n                               value={ state.mainWorkTime }\r\n                               onChange={ onMainJobTimeChange } />\r\n                    <InputItem id=\"additionalWorkTime\"\r\n                               labelText=\"Дополнительное необязательно время\"\r\n                               placeholder=\"Дополнительное время, которое невключено в основное, но тоже можно отработать\"\r\n                               value={ state.additionalWorkTime }\r\n                               onChange={ onAdditionalJobTimeChange } />\r\n                </Form>\r\n            </div>\r\n\r\n            <div className={`p-3 mt-5 ${className}`} { ...rest }>\r\n                <Form>\r\n                    <InputItem id=\"workedMain\"\r\n                               labelText=\"Отработано основного времени\"\r\n                               placeholder=\"Сколько основного отработано\"\r\n                               value={ state.alreadyMainWorked }\r\n                               onChange={ onWorkedMainChange } />\r\n                    <InputItem id=\"workedAdditional\"\r\n                               labelText=\"Отработано дополнительного времени\"\r\n                               placeholder=\"Сколько дополнительного отработано\"\r\n                               value={ state.alreadyAdditionalWorked }\r\n                               onChange={ onAdditionalWorked } />\r\n                </Form>\r\n            </div>\r\n\r\n            <div className={`p-3 mt-5 ${className}`} { ...rest }>\r\n                <Form className='position-relative'>\r\n                    <InputItem id=\"totalWorkTime\"\r\n                               type=\"text\"\r\n                               placeholder=\"Введите время выше и получите рассчёт\"\r\n                               labelText='Всего необходимо отработать'\r\n                               value={ getWorkRemainder() }\r\n                               disabled\r\n                               readOnly>\r\n                        <span className=\"position-absolute\"\r\n                              title=\"сменить способ показа времени\"\r\n                              style={{ top: 30, right: 10, cursor: 'pointer' }}\r\n                              onClick={ onClickChangeWorkRemainder }>\r\n                            &#9854;\r\n                        </span>\r\n                    </InputItem>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useLocalStorage } from '../hooks/useLocalStorage';\r\nimport { rootReducer } from '../reducers/rootReducers';\r\nimport { ContentContainer } from './ContentContainer';\r\nimport { IState, IAction } from '../misc/interfaces';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport { initialState } from '../misc/constants';\r\nimport { Container } from 'reactstrap';\r\nimport { useReducer } from 'react';\r\n\r\nimport './App.sass';\r\n\r\nexport const App = () => {\r\n    const [storageState, setStorageState] = useLocalStorage({ keys: Object.keys(initialState) as Array<keyof IState>, wrapperKey: 'workTimeHelper' });\r\n    const [state, dispatch] = useReducer<typeof rootReducer>(rootReducer, { ...initialState, ...storageState });\r\n    const customDispatch = (data: Omit<IAction, 'setStorageState'>) => dispatch({ ...data, setStorageState } as IAction);\r\n\r\n    return (\r\n        <AppContext.Provider value={[state, customDispatch]}>\r\n            <Container fluid className='bg-dark d-flex justify-content-center' style={{ minHeight: '100vh', padding: '70px 3rem 20px' }}>\r\n                <ContentContainer className='bg-white' />\r\n            </Container>\r\n        </AppContext.Provider>\r\n    )\r\n};\r\n","import { IState } from '../misc/interfaces';\r\nimport { useState } from 'react';\r\n\r\ntype UseLocalStorage = ({ keys, initialState, wrapperKey }: { keys: Array<keyof IState>, initialState?: IState, wrapperKey?: string }) => [Partial<IState>, Function];\r\ntype ISetStorageProps = ((state: IState) => IState) | IState;\r\n\r\n\r\nexport const useLocalStorage: UseLocalStorage = ({ keys, initialState, wrapperKey }) => {\r\n   const commonState = {} as IState;\r\n\r\n   if (initialState) {\r\n      const initialKeys = Object.keys(initialState) as Array<keyof IState>;\r\n\r\n      if (wrapperKey) {\r\n         const dataForStorage: Record<string, unknown> = {};\r\n\r\n         initialKeys.forEach(k => dataForStorage[k] = initialState[k]);\r\n         localStorage.setItem(wrapperKey, JSON.stringify(dataForStorage));\r\n      } else {\r\n         initialKeys.forEach(k => localStorage.setItem(k, JSON.stringify(initialState[k])));\r\n      }\r\n   }\r\n\r\n   if (wrapperKey) {\r\n      const savedState = JSON.parse(localStorage.getItem(wrapperKey) as string);\r\n\r\n      savedState && Object.keys(savedState).forEach(k => {\r\n         if (savedState[k] !== null && savedState[k] !== undefined) commonState[k as keyof IState] = savedState[k];\r\n      });\r\n   } else {\r\n      keys.forEach(k => {\r\n         const record = JSON.parse(localStorage.getItem(k) as string);\r\n\r\n         if (record !== null && record !== undefined) commonState[k] = record;\r\n      });\r\n   }\r\n\r\n   const [state, setState] = useState(commonState);\r\n\r\n   const storageSetState = (newState: ISetStorageProps) => {\r\n      let resultState: IState;\r\n\r\n      if (typeof newState === 'function') {\r\n         resultState = { ...state, ...newState(state) };\r\n      } else {\r\n         resultState = { ...state, ...newState };\r\n      }\r\n\r\n      if (wrapperKey) localStorage.setItem(wrapperKey, JSON.stringify(resultState))\r\n      else keys.forEach(k => localStorage.setItem(k, JSON.stringify(resultState[k])));\r\n\r\n      setState(resultState);\r\n   };\r\n\r\n   return [state, storageSetState];\r\n}\r\n","import { default as ReactDOM } from 'react-dom';\r\nimport { App } from './components/App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}