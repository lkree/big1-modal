{"version":3,"sources":["store/reducers/counterEditorReducer/actions.ts","selectors/timeSelector.ts","selectors/viewSelector.ts","selectors/counterEditorSelector.ts","misc/constants.ts","misc/utils.ts","store/reducers/counterEditorReducer/reducer.ts","store/reducers/timeReducer/actions.ts","store/reducers/counterEditorReducer/actionCreators.ts","store/reducers/timeReducer/actionCreators.ts","store/reducers/viewReducer/actions.ts","store/reducers/timeReducer/reducer.ts","store/reducers/viewReducer/actionCreators.ts","store/reducers/viewReducer/reducer.ts","store/reducers/index.ts","hooks/useActions.ts","hooks/useTypedSelector.ts","components/ContentContainer.tsx","components/InputItem.tsx","components/WorkRemainders.tsx","components/WorkInfo.tsx","components/CounterEditor.tsx","components/Counters.tsx","components/App.tsx","store/index.ts","index.tsx"],"names":["Actions","getTimeState","timeReducer","getViewState","viewReducer","getCounterEditorState","counterEditorReducer","WRAPPER_KEY","clone","data","result","deep","isArray","Array","isDate","Date","isDataObject","isObject","forEach","v","push","Object","keys","k","getMinutesFromSeconds","seconds","Math","floor","setStorageState","state","newState","wrapperKey","callback","resultState","existState","JSON","parse","localStorage","getItem","setItem","stringify","getStorageState","initialState","commonState","savedState","undefined","record","formatDate","value","workRemainderType","abs","mathFn","minutes","hours","sign","stringMinutes","stringHours","length","initialEditorState","isActive","multiplier","startsFrom","editorsSettings","actionCreators","setMultiplier","id","type","SET_MULTIPLIER","payload","setIsActive","SET_IS_ACTIVE","setStartsFrom","SET_STARTS_FROM","downloadSettings","DOWNLOAD_SETTINGS","setWorkDayLength","WORK_DAY_LENGTH_CHANGE","importData","IMPORT_DATA","stateModifiers","workDayLength","countersData","MINUTES_IN_HOUR","setRemainderType","REMAINDER_CHANGE","remainderViewType","timeState","viewState","counterEditorsState","reducers","action","values","name","timeActionCreators","viewActionCreators","counterEditorsActionCreators","useActions","dispatch","useDispatch","useMemo","bindActionCreators","useTypedSelector","useSelector","ContentContainer","children","useEffect","className","InputItem","labelText","rest","FormGroup","Label","for","Input","WorkRemainders","props","Form","placeholder","coefficient","i","min","totalCalc","disabled","readOnly","worked","savedTime","calcWorkAmount","WorkInfo","onWorkDayLengthChange","useCallback","target","title","style","top","right","cursor","onClick","onChange","CounterEditor","isOpened","setIsOpened","settings","onIsActiveClick","onMultiplierChange","onStartsFromChange","Modal","isOpen","toggle","ModalBody","checked","marginLeft","Counters","useState","onEditClick","renderExistData","map","Boolean","App","Container","fluid","minHeight","padding","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.737e7a10.chunk.js","sourcesContent":["export enum Actions {\r\n    DOWNLOAD_SETTINGS = 'uploadSettings',\r\n    SET_IS_ACTIVE = 'setIsActive',\r\n    SET_MULTIPLIER = 'setMultiplier',\r\n    SET_STARTS_FROM = 'setStartsFrom'\r\n}\r\n","import { RootState } from '../store';\r\n\r\nexport const getTimeState = ({ timeReducer }: RootState) => timeReducer;\r\n","import { RootState } from '../store';\r\n\r\nexport const getViewState = ({ viewReducer }: RootState) => viewReducer;\r\n","import { RootState } from '../store';\r\n\r\nexport const getCounterEditorState = ({ counterEditorReducer }: RootState) => counterEditorReducer;\r\n","export const MAX_PERCENT = 100;\r\nexport const SECONDS_IN_MINUTE = 60;\r\nexport const MINUTES_IN_HOUR = 60;\r\nexport const STANDARD_WORK_DAY = 8;\r\nexport const MILLISECONDS_IN_SECOND = 1000;\r\nexport const MILLISECONDS_IN_MINUTE = MILLISECONDS_IN_SECOND * 60;\r\nexport const MILLISECONDS_IN_HOUR = MILLISECONDS_IN_MINUTE * MINUTES_IN_HOUR;\r\nexport const MILLISECONDS_IN_DAY = MILLISECONDS_IN_HOUR * 24;\r\nexport const WRAPPER_KEY = 'workTimeHelper';\r\nexport const COUNTERS_KEY = 'counters';\r\n","import { MAX_PERCENT, MINUTES_IN_HOUR, SECONDS_IN_MINUTE } from './constants';\r\nimport { ICountersData, IEditorSettings } from './models';\r\n\r\ninterface ITotalCalcProps {\r\n    workDayLength: number;\r\n    editorsSettings?: Record<string, IEditorSettings>;\r\n    countersData?: ICountersData;\r\n}\r\n\r\ninterface IWorkAmountProps extends ITotalCalcProps {}\r\n\r\nexport const clone = <T extends unknown>(data: T, deep: boolean = false): T => {\r\n    const isArray = Array.isArray(data);\r\n    const isDate = data instanceof Date;\r\n    const isDataObject = isObject(data);\r\n\r\n    if (isDate) return new Date(data as Date) as T;\r\n\r\n    if (!deep) {\r\n        if (isArray) return [...data as unknown[]] as T;\r\n        if (isDataObject) return { ...data as object } as T;\r\n    }\r\n\r\n    if (!isArray && !isDataObject) {\r\n        return data;\r\n    }\r\n\r\n    let result: T;\r\n\r\n    if (isArray) {\r\n        result = [] as T;\r\n\r\n        (data as unknown[]).forEach((v) => (result as unknown[]).push(clone(v, deep)));\r\n\r\n        return result;\r\n    }\r\n\r\n    result = {} as T;\r\n\r\n    (Object.keys(data as object) as (keyof T)[]).forEach((k) => (result[k] as T) = clone(data[k] as T, deep));\r\n\r\n    return result;\r\n}\r\n\r\nconst isObject = (data: unknown): data is object => {\r\n    return typeof data === 'object' && !Array.isArray(data) && data !== null && !(data instanceof Date);\r\n}\r\n\r\nexport const stringToNumbers = (state: Record<string, string>) => {\r\n    const result = {} as Record<string, number>;\r\n\r\n    (Object.keys(state)).forEach(k => result[k] = +state[k]);\r\n\r\n    return result;\r\n}\r\n\r\nexport const getMinutesFromSeconds = (seconds: number) => Math.floor(seconds / SECONDS_IN_MINUTE);\r\n\r\nexport const totalCalc = ({ workDayLength, countersData, editorsSettings = {} }: ITotalCalcProps): number => {\r\n    if (!countersData?.data || !Object.keys(editorsSettings).length) return 0;\r\n\r\n    if (!workDayLength) return 0;\r\n\r\n    let coefficient = 0;\r\n    const countersValues = Object.values(countersData.data);\r\n\r\n    countersValues.forEach(i => {\r\n        if (editorsSettings?.[i.name]?.isActive && coefficient < editorsSettings?.[i.name]?.multiplier) {\r\n            coefficient = editorsSettings?.[i.name]?.multiplier;\r\n        }\r\n    });\r\n\r\n    return Math.min(workDayLength / (coefficient / MAX_PERCENT), workDayLength);\r\n}\r\n\r\nexport const calcWorkAmount = ({ workDayLength, countersData, editorsSettings = {} }: IWorkAmountProps): number => {\r\n    if (!workDayLength) return 0;\r\n\r\n    if (!countersData?.data || !Object.keys(editorsSettings).length) return workDayLength;\r\n\r\n    let worked = 0;\r\n\r\n   Object.values(countersData.data).forEach(i => {\r\n       if (editorsSettings?.[i.name]?.isActive) {\r\n           worked += (getMinutesFromSeconds(i.savedTime) - editorsSettings?.[i.name]?.startsFrom)\r\n                        * (editorsSettings?.[i.name]?.multiplier / MAX_PERCENT);\r\n       }\r\n   });\r\n\r\n    return Math.floor(worked);\r\n}\r\n\r\nexport const setStorageState = <T extends {}>(\r\n    state: T,\r\n    newState: T | ((data: T) => T),\r\n    keys: Array<keyof T>,\r\n    wrapperKey?: string,\r\n    callback?: (data: T) => void,\r\n) => {\r\n    let resultState: T;\r\n\r\n    if (typeof newState === 'function') {\r\n        resultState = { ...state, ...(newState as Function)(state) };\r\n    } else {\r\n        resultState = { ...state, ...newState };\r\n    }\r\n\r\n    if (wrapperKey) {\r\n        const existState = JSON.parse(localStorage.getItem(wrapperKey) || '{}');\r\n        localStorage.setItem(wrapperKey, JSON.stringify({ ...existState, ...resultState }))\r\n    }\r\n    else keys.forEach(k => localStorage.setItem(`${k}`, JSON.stringify(resultState[k])));\r\n\r\n    callback?.(resultState);\r\n};\r\n\r\nexport const getStorageState = <T extends {}>(\r\n    keys: Array<keyof T>,\r\n    initialState?: T,\r\n    wrapperKey?: string\r\n) => {\r\n    const commonState = {} as T;\r\n\r\n    if (wrapperKey) {\r\n        const savedState = JSON.parse(localStorage.getItem(wrapperKey) as string) as T;\r\n\r\n        savedState && (Object.keys(initialState || savedState) as Array<keyof T>).forEach(k => {\r\n            if (savedState[k] !== null && savedState[k] !== undefined) commonState[k] = savedState[k];\r\n        });\r\n    } else {\r\n        keys.forEach(k => {\r\n            const record = JSON.parse(localStorage.getItem(`${k}`) as string);\r\n\r\n            if (record !== null && record !== undefined) commonState[k] = record;\r\n        });\r\n    }\r\n\r\n    if (initialState) {\r\n        (Object.keys(initialState) as Array<keyof T>).forEach(k => commonState[k] = commonState[k] ?? initialState[k]);\r\n    }\r\n\r\n    return commonState;\r\n}\r\n\r\nexport const formatDate = (value: number, workRemainderType: 'minutes' | 'hours') => {\r\n    if (workRemainderType === 'minutes') return `${value < 0 ? '- ' : ''}${Math.abs(value)}`;\r\n\r\n    const mathFn = value >= 0 ? 'floor' : 'ceil';\r\n    const minutes = Math[mathFn](value % MINUTES_IN_HOUR);\r\n    const hours = Math[mathFn](value / MINUTES_IN_HOUR);\r\n    const sign = minutes < 0 || hours < 0 ? '- ' : '';\r\n    const stringMinutes = `${Math.abs(minutes)}`;\r\n    const stringHours = `${Math.abs(hours)}`;\r\n\r\n    return `${sign}${stringHours.length === 1 ? '0' + stringHours : stringHours} : ${stringMinutes.length === 1 ? '0' + stringMinutes : stringMinutes}`;\r\n}\r\n","import { clone, getStorageState, IEditorSettings, setStorageState, WRAPPER_KEY } from '../../../misc';\r\nimport { IState, TActions } from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\nconst initialEditorState: IEditorSettings = {\r\n    isActive: true,\r\n    multiplier: 100,\r\n    startsFrom: 0\r\n}\r\n\r\nexport const initialState: IState = {\r\n    editorsSettings: {}\r\n}\r\n\r\nexport const counterEditorReducer = (state: IState = initialState, action: TActions): IState => {\r\n    let newState = { ...state };\r\n\r\n    switch (action.type) {\r\n        case Actions.DOWNLOAD_SETTINGS:\r\n            newState = getStorageState(\r\n                Object.keys(initialState) as Array<keyof typeof initialState>, initialState, WRAPPER_KEY\r\n            );\r\n            Object.values(action.payload.value.data || {}).forEach(({ name }) => {\r\n                if (!newState.editorsSettings[name])\r\n                    newState.editorsSettings[name] = { ...initialEditorState };\r\n            });\r\n            break;\r\n        case Actions.SET_IS_ACTIVE:\r\n            newState.editorsSettings[action.payload.id].isActive = action.payload.value;\r\n            break;\r\n        case Actions.SET_MULTIPLIER:\r\n            newState.editorsSettings[action.payload.id].multiplier = action.payload.value;\r\n            break;\r\n        case Actions.SET_STARTS_FROM:\r\n            newState.editorsSettings[action.payload.id].startsFrom = action.payload.value;\r\n            break;\r\n        default:\r\n            return { ...state };\r\n    }\r\n\r\n    setStorageState(state, newState, Object.keys(initialState) as Array<keyof IState>, WRAPPER_KEY);\r\n\r\n    return clone(newState, true);\r\n}\r\n","export enum Actions {\r\n    WORK_DAY_LENGTH_CHANGE = 'workDayLengthChange',\r\n    IMPORT_DATA = 'importData',\r\n}\r\n","import { DownloadSettings, SetIsActive, SetMultiplier, SetStartsFrom } from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\nexport const actionCreators = {\r\n    setMultiplier: ({ id, value }: SetMultiplier['payload']): SetMultiplier => ({ type: Actions.SET_MULTIPLIER, payload: { id, value } }),\r\n    setIsActive: ({ id, value }: SetIsActive['payload']): SetIsActive => ({ type: Actions.SET_IS_ACTIVE, payload: { id, value } }),\r\n    setStartsFrom: ({ id, value }: SetStartsFrom['payload']): SetStartsFrom => ({ type: Actions.SET_STARTS_FROM, payload: { id, value } }),\r\n    downloadSettings: ({ value }: DownloadSettings['payload']): DownloadSettings => ({ type: Actions.DOWNLOAD_SETTINGS, payload: { value } })\r\n}\r\n","import { ImportData, SetWorkDayLength } from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\nexport const actionCreators = {\r\n    setWorkDayLength: (payload: number): SetWorkDayLength => ({ type: Actions.WORK_DAY_LENGTH_CHANGE, payload }),\r\n    importData: (): ImportData => ({ type: Actions.IMPORT_DATA })\r\n}\r\n","export enum Actions {\r\n    REMAINDER_CHANGE = 'remainderChange',\r\n}\r\n","import { MINUTES_IN_HOUR, STANDARD_WORK_DAY, WRAPPER_KEY, clone, setStorageState, COUNTERS_KEY } from '../../../misc';\r\nimport { IState, SetWorkDayLength, TActions } from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\nconst stateModifiers = {\r\n    [Actions.WORK_DAY_LENGTH_CHANGE]: (state: IState, payload: number): IState => ({\r\n        ...state,\r\n        workDayLength: payload\r\n    }),\r\n    [Actions.IMPORT_DATA]: (state: IState): IState => ({\r\n        ...state,\r\n        countersData: JSON.parse(localStorage.getItem(COUNTERS_KEY) as string)\r\n    })\r\n}\r\n\r\nexport const initialState: IState = {\r\n    workDayLength: MINUTES_IN_HOUR * STANDARD_WORK_DAY\r\n}\r\n\r\nexport const timeReducer = (state: IState = initialState, action: TActions): IState => {\r\n    if (!stateModifiers[action.type]) return { ...state };\r\n\r\n    const newState = stateModifiers[action.type](clone(state, true), (action as SetWorkDayLength).payload);\r\n\r\n    setStorageState(state, newState, Object.keys(initialState) as Array<keyof IState>, WRAPPER_KEY);\r\n\r\n    return newState;\r\n}\r\n","import { SetRemainderType } from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\nexport const actionCreators = {\r\n    setRemainderType: (): SetRemainderType => ({ type: Actions.REMAINDER_CHANGE }),\r\n}\r\n","import { WRAPPER_KEY, setStorageState } from '../../../misc';\r\nimport { IState, TActions } from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\nexport const initialState: IState = {\r\n    remainderViewType: 'minutes'\r\n}\r\n\r\nexport const viewReducer = (state: IState = initialState, action: TActions): IState => {\r\n    let newState = { ...state };\r\n\r\n    switch (action.type) {\r\n        case Actions.REMAINDER_CHANGE:\r\n            newState.remainderViewType = state.remainderViewType === 'minutes' ? 'hours' : 'minutes';\r\n            break;\r\n        default:\r\n            return { ...state };\r\n    }\r\n\r\n    setStorageState(state, newState, Object.keys(initialState) as Array<keyof IState>, WRAPPER_KEY);\r\n\r\n    return { ...newState };\r\n}\r\n","import { counterEditorReducer, actionCreators as counterEditorsActionCreators, initialState as counterEditorsState, IState as CounterEditorsState } from './counterEditorReducer';\r\nimport { timeReducer, actionCreators as timeActionCreators, initialState as timeState, IState as TimeState } from './timeReducer';\r\nimport { viewReducer, actionCreators as viewActionCreators, initialState as viewState, IState as ViewState } from './viewReducer';\r\n\r\nexport const initialState = {\r\n    ...timeState,\r\n    ...viewState,\r\n    ...counterEditorsState\r\n}\r\n\r\nexport const reducers = {\r\n    timeReducer,\r\n    viewReducer,\r\n    counterEditorReducer\r\n};\r\n\r\nexport const actionCreators = {\r\n    ...timeActionCreators,\r\n    ...viewActionCreators,\r\n    ...counterEditorsActionCreators\r\n};\r\n\r\nexport interface IState extends TimeState, ViewState, CounterEditorsState {}\r\n","import { actionCreators } from '../store/reducers/';\r\nimport { bindActionCreators } from 'redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useMemo } from 'react';\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return useMemo(() => bindActionCreators(actionCreators, dispatch), [dispatch]);\r\n}\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { getCounterEditorState, getTimeState } from '../selectors';\r\nimport { useActions, useTypedSelector } from '../hooks';\r\nimport { HTMLAttributes, useEffect } from 'react';\r\n\r\ninterface IProps extends HTMLAttributes<HTMLDivElement> {}\r\n\r\nexport const ContentContainer = ({ children }: IProps) => {\r\n    const { editorsSettings } = useTypedSelector(getCounterEditorState);\r\n    const { countersData } = useTypedSelector(getTimeState);\r\n    const { importData, downloadSettings } = useActions();\r\n\r\n    useEffect(() => { importData(); }, [importData]);\r\n    useEffect(() => { countersData && downloadSettings({ value: countersData }); }, [countersData, downloadSettings]);\r\n\r\n    if (!Object.keys(editorsSettings).length) return <></>;\r\n\r\n    return <div className=\"w-100 content-container\">{ children }</div>;\r\n}\r\n","import { FormGroup, Input, Label } from 'reactstrap';\r\nimport { InputType } from 'reactstrap/es/Input';\r\nimport { HTMLAttributes } from 'react';\r\n\r\ninterface IProps extends HTMLAttributes<HTMLInputElement> {\r\n    labelText?: string;\r\n    type?: InputType;\r\n    value?: string | number;\r\n    disabled?: boolean;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport const InputItem = ({ labelText, children, id, value, className, ...rest }: IProps = { type: 'number' }) => (\r\n    <FormGroup className={ className }>\r\n        <Label for={ id }>{ labelText }</Label>\r\n        <Input name={ id } id={ id } value={ value || value === 0 ? value : '' } { ...rest } />\r\n        { children }\r\n    </FormGroup>\r\n);\r\n","import { getCounterEditorState, getTimeState, getViewState } from '../selectors';\r\nimport { calcWorkAmount, formatDate, totalCalc } from '../misc';\r\nimport { FC, HTMLAttributes, useMemo } from 'react';\r\nimport { useTypedSelector } from '../hooks';\r\nimport { InputItem } from './InputItem';\r\nimport { Form } from 'reactstrap';\r\n\r\ninterface IProps extends HTMLAttributes<HTMLDivElement> {}\r\n\r\nexport const WorkRemainders: FC<IProps> = (props) => {\r\n    const { workDayLength, countersData } = useTypedSelector(getTimeState);\r\n    const { editorsSettings } = useTypedSelector(getCounterEditorState);\r\n    const { remainderViewType } = useTypedSelector(getViewState);\r\n\r\n    return (\r\n        <div { ...props }>\r\n            <Form className=\"position-relative\">\r\n                <InputItem id=\"totalWorkTime\"\r\n                           type=\"text\"\r\n                           placeholder=\"Введите время выше и получите рассчёт\"\r\n                           labelText=\"Всего необходимо отработать\"\r\n                           value={ useMemo(() => formatDate(totalCalc({ workDayLength, countersData, editorsSettings }), remainderViewType), [workDayLength, countersData, remainderViewType, editorsSettings]) }\r\n                           disabled\r\n                           readOnly />\r\n\r\n                <InputItem id=\"totalWorkTime\"\r\n                           type=\"text\"\r\n                           placeholder=\"Введите время выше и получите рассчёт\"\r\n                           labelText=\"Уже отработано в пересчете на длительность рабочего дня\"\r\n                           value={ useMemo(() => formatDate(calcWorkAmount({ workDayLength, countersData, editorsSettings }), remainderViewType), [workDayLength, countersData, remainderViewType, editorsSettings]) }\r\n                           disabled\r\n                           readOnly />\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { ChangeEventHandler, FC, HTMLAttributes, useCallback } from 'react';\r\nimport { useActions, useTypedSelector } from '../hooks';\r\nimport { getTimeState } from '../selectors';\r\nimport { InputItem } from './InputItem';\r\nimport { Form } from 'reactstrap';\r\n\r\ninterface IProps extends HTMLAttributes<HTMLDivElement> {}\r\n\r\nexport const WorkInfo: FC<IProps> = ({ className }) => {\r\n    const { setWorkDayLength, setRemainderType } = useActions();\r\n    const { workDayLength } = useTypedSelector(getTimeState);\r\n    const onWorkDayLengthChange: ChangeEventHandler<HTMLInputElement> = useCallback(\r\n        ({ target: { value } }) => setWorkDayLength(+value),\r\n        [setWorkDayLength]\r\n    );\r\n\r\n    return (\r\n        <div className={`p-3 position-relative ${className}`}>\r\n                <span className=\"position-absolute\"\r\n                      title=\"сменить способ показа времени\"\r\n                      style={{ top: 5, right: 10, cursor: 'pointer' }}\r\n                      onClick={ setRemainderType }>\r\n                    &#9854;\r\n                </span>\r\n\r\n            <Form>\r\n                <InputItem id=\"workTimeLength\"\r\n                           labelText=\"Длительность рабочего дня\"\r\n                           placeholder=\"Длительность рабочего дня\"\r\n                           value={ workDayLength }\r\n                           onChange={ onWorkDayLengthChange } />\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { FormGroup, Input, Label, Modal, ModalBody } from 'reactstrap';\r\nimport { FC, MouseEventHandler, useCallback } from 'react';\r\nimport { useActions, useTypedSelector } from '../hooks';\r\nimport { getCounterEditorState } from '../selectors';\r\nimport { InputItem } from './InputItem';\r\n\r\ninterface IProps {\r\n    isOpened: boolean;\r\n    setIsOpened: MouseEventHandler;\r\n    id: string;\r\n}\r\n\r\nexport const CounterEditor: FC<IProps> = ({ isOpened, setIsOpened, id }) => {\r\n    const { setIsActive, setMultiplier, setStartsFrom } = useActions();\r\n    const { editorsSettings } = useTypedSelector(getCounterEditorState);\r\n    const settings = editorsSettings[id];\r\n\r\n    const onIsActiveClick = useCallback(\r\n        () => setIsActive({ id, value: !editorsSettings[id]?.isActive }),\r\n        [setIsActive, id, editorsSettings]\r\n    );\r\n    const onMultiplierChange = useCallback(\r\n        ({ target: { value } }) => setMultiplier({ id, value: +value }),\r\n        [setMultiplier, id]\r\n    );\r\n    const onStartsFromChange = useCallback(\r\n        ({ target: { value } }) => setStartsFrom({ id, value: +value }),\r\n        [setStartsFrom, id]\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Modal isOpen={ isOpened } toggle={ setIsOpened }>\r\n                <ModalBody>\r\n                    <FormGroup className='pb-3'>\r\n                        <Input type='checkbox'\r\n                               id='isActive'\r\n                               className=''\r\n                               onChange={ onIsActiveClick }\r\n                               checked={ settings.isActive } />\r\n                        <Label for='isActive' style={{ marginLeft: '10px' }}>Active</Label>\r\n                    </FormGroup>\r\n\r\n                    <InputItem id='Множитель'\r\n                               labelText='Множитель %'\r\n                               type='number'\r\n                               value={ settings.multiplier }\r\n                               onChange={ onMultiplierChange } />\r\n\r\n                    <InputItem id='Начинаем с'\r\n                               labelText='Начинаем с'\r\n                               type='number'\r\n                               value={ settings.startsFrom }\r\n                               onChange={ onStartsFromChange } />\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import { FC, HTMLAttributes, useCallback, useMemo, useState } from 'react';\r\nimport { formatDate, getMinutesFromSeconds } from '../misc';\r\nimport { getTimeState, getViewState } from '../selectors';\r\nimport { CounterEditor } from './CounterEditor';\r\nimport { useTypedSelector } from '../hooks';\r\nimport { InputItem } from './InputItem';\r\n\r\ninterface IProps extends HTMLAttributes<HTMLDivElement> {}\r\n\r\nexport const Counters: FC<IProps> = ({ ...rest }) => {\r\n    const [isOpened, setIsOpened] = useState('');\r\n    const { countersData } = useTypedSelector(getTimeState);\r\n    const { remainderViewType } = useTypedSelector(getViewState);\r\n    const onEditClick = useCallback((id?) => setIsOpened(state => state ? '' : id), [setIsOpened]);\r\n    const renderExistData = useMemo(() => Object.values(countersData?.data || {}).map(i => (\r\n        <InputItem id={ i.name }\r\n                   key={ i.name + i.savedTime }\r\n                   labelText={ i.name }\r\n                   value={ formatDate(getMinutesFromSeconds(i.savedTime), remainderViewType) }\r\n                   className='position-relative'\r\n                   disabled>\r\n                <span className=\"position-absolute\"\r\n                      title=\"сменить способ показа времени\"\r\n                      style={{ top: 30, right: 10, cursor: 'pointer' }}\r\n                      onClick={ () => onEditClick(i.name) }>\r\n                    &#9998;\r\n                </span>\r\n        </InputItem>\r\n    )), [countersData, remainderViewType, onEditClick]);\r\n\r\n    return (\r\n        <div { ...rest }>\r\n            { renderExistData }\r\n\r\n            { isOpened ? <CounterEditor isOpened={ Boolean(isOpened) } setIsOpened={ onEditClick } id={ isOpened } /> : <></> }\r\n        </div>\r\n    );\r\n}\r\n","import { ContentContainer } from './ContentContainer';\r\nimport { WorkRemainders } from './WorkRemainders';\r\nimport { Container } from 'reactstrap';\r\nimport { WorkInfo } from './WorkInfo';\r\nimport { Counters } from './Counters';\r\n\r\nimport './App.sass';\r\n\r\nexport const App = () => (\r\n    <Container fluid className=\"bg-dark d-flex justify-content-center\" style={{ minHeight: '100vh', padding: '70px 3rem 20px' }}>\r\n        <ContentContainer>\r\n            <WorkInfo className=\"p-3 position-relative bg-white\" />\r\n\r\n            <Counters className=\"p-3 mt-5 bg-white\" />\r\n\r\n            <WorkRemainders className=\"p-3 mt-5 bg-white\" />\r\n        </ContentContainer>\r\n    </Container>\r\n);\r\n","import { reducers, initialState, IState } from './reducers';\r\nimport { getStorageState, WRAPPER_KEY } from '../misc';\r\nimport { combineReducers, createStore } from 'redux';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\nconst { remainderViewType,...state } = getStorageState<IState>(\r\n    Object.keys(initialState) as Array<keyof IState>, initialState, WRAPPER_KEY\r\n)\r\n\r\nexport const store = createStore(rootReducer, { timeReducer: state, viewReducer: { remainderViewType } });\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport { initialState };\r\nexport type { IState };\r\n","import { default as ReactDOM } from 'react-dom';\r\nimport { App } from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}