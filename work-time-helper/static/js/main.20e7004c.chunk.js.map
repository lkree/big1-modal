{"version":3,"sources":["store/reducers/timeReducer/actions.ts","misc/constants.ts","misc/utils.ts","store/reducers/timeReducer/actionCreators.ts","store/reducers/viewReducer/actions.ts","store/reducers/timeReducer/reducer.ts","store/reducers/viewReducer/actionCreators.ts","store/reducers/viewReducer/reducer.ts","store/reducers/index.ts","hooks/useTypedSelector.ts","components/InputItem.tsx","components/ContentContainer.tsx","hooks/useActions.ts","components/App.tsx","store/index.ts","index.tsx"],"names":["Actions","WRAPPER_KEY","clone","data","result","deep","isArray","Array","isDate","Date","isDataObject","isObject","forEach","v","push","Object","keys","k","totalCalc","additionalWorkTime","mainWorkTime","workDayLength","alreadyAdditionalWorked","alreadyMainWorked","additionalWorkedTime","Math","round","calcWorkAmount","worked","setStorageState","state","newState","wrapperKey","callback","resultState","existState","JSON","parse","localStorage","getItem","setItem","stringify","getStorageState","initialState","commonState","savedState","undefined","record","formatDate","value","workRemainderType","abs","mathFn","minutes","hours","sign","stringMinutes","stringHours","length","actionCreators","setMainWorkTime","payload","type","MAIN_WORK_TIME_CHANGE","setAdditionalWorkTime","ADDITIONAL_WORK_TIME_CHANGE","setWorkDayLength","WORK_DAY_LENGTH_CHANGE","setAlreadyWorkedMainTime","ALREADY_MAIN_WORKED_TIME_CHANGE","setAlreadyWorkedAdditionalTime","ALREADY_ADDITIONAL_WORKED_TIME_CHANGE","importData","IMPORT_DATA","stateModifiers","countersData","currentDayStart","setHours","currentDayEnd","ids","filter","id","name","floor","savedTime","MINUTES_IN_HOUR","setRemainderType","REMAINDER_CHANGE","remainderViewType","timeState","viewState","reducers","timeReducer","action","viewReducer","timeActionCreators","viewActionCreators","useTypedSelector","useSelector","InputItem","labelText","children","rest","FormGroup","Label","for","Input","ContentContainer","className","dispatch","useDispatch","bindActionCreators","useActions","title","style","top","right","cursor","onClick","Form","placeholder","onChange","target","disabled","readOnly","App","Container","fluid","minHeight","padding","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.20e7004c.chunk.js","sourcesContent":["export enum Actions {\r\n    MAIN_WORK_TIME_CHANGE = 'mainWorkTimeChange',\r\n    ADDITIONAL_WORK_TIME_CHANGE = 'additionalWorkTimeChange',\r\n    WORK_DAY_LENGTH_CHANGE = 'workDayLengthChange',\r\n    ALREADY_MAIN_WORKED_TIME_CHANGE = 'alreadyMainWorkedTimeChange',\r\n    ALREADY_ADDITIONAL_WORKED_TIME_CHANGE = 'alreadyAdditionalWorkedTimeChange',\r\n    IMPORT_DATA = 'importData',\r\n}\r\n","export const MINUTES_IN_HOUR = 60;\r\nexport const STANDARD_WORK_DAY = 8;\r\nexport const MILLISECONDS_IN_SECOND = 1000;\r\nexport const MILLISECONDS_IN_MINUTE = MILLISECONDS_IN_SECOND * 60;\r\nexport const MILLISECONDS_IN_HOUR = MILLISECONDS_IN_MINUTE * MINUTES_IN_HOUR;\r\nexport const MILLISECONDS_IN_DAY = MILLISECONDS_IN_HOUR * 24;\r\nexport const WRAPPER_KEY = 'workTimeHelper';\r\nexport const MAIN_WORK_KEY = 'программирование';\r\nexport const ADDITIONAL_WORK_KEY = 'остальное';\r\nexport const COUNTERS_KEY = 'counters';\r\n","import { MINUTES_IN_HOUR } from './constants';\r\n\r\ninterface ITotalCalcProps {\r\n    mainWorkTime: number;\r\n    additionalWorkTime: number;\r\n    workDayLength: number;\r\n    alreadyMainWorked: number;\r\n    alreadyAdditionalWorked: number;\r\n}\r\n\r\ninterface IWorkAmountProps extends ITotalCalcProps {}\r\n\r\nexport const clone = <T extends unknown>(data: T, deep: boolean = false): T => {\r\n    const isArray = Array.isArray(data);\r\n    const isDate = data instanceof Date;\r\n    const isDataObject = isObject(data);\r\n\r\n    if (isDate) return new Date(data as Date) as T;\r\n\r\n    if (!deep) {\r\n        if (isArray) return [...data as unknown[]] as T;\r\n        if (isDataObject) return { ...data as object } as T;\r\n    }\r\n\r\n    if (!isArray && !isDataObject) {\r\n        return data;\r\n    }\r\n\r\n    let result: T;\r\n\r\n    if (isArray) {\r\n        result = [] as T;\r\n\r\n        (data as unknown[]).forEach((v) => (result as unknown[]).push(clone(v, deep)));\r\n\r\n        return result;\r\n    }\r\n\r\n    result = {} as T;\r\n\r\n    (Object.keys(data as object) as (keyof T)[]).forEach((k) => (result[k] as T) = clone(data[k] as T, deep));\r\n\r\n    return result;\r\n}\r\n\r\nconst isObject = (data: unknown): data is object => {\r\n    return typeof data === 'object' && !Array.isArray(data) && data !== null && !(data instanceof Date);\r\n}\r\n\r\nexport const stringToNumbers = (state: Record<string, string>) => {\r\n    const result = {} as Record<string, number>;\r\n\r\n    (Object.keys(state)).forEach(k => result[k] = +state[k]);\r\n\r\n    return result;\r\n}\r\n\r\nexport const totalCalc = ({ additionalWorkTime, mainWorkTime, workDayLength, alreadyAdditionalWorked, alreadyMainWorked }: ITotalCalcProps): number => {\r\n    if (!mainWorkTime && !additionalWorkTime) return 0;\r\n\r\n    if (!mainWorkTime) return workDayLength;\r\n\r\n    let additionalWorkedTime = 0;\r\n\r\n    if (alreadyAdditionalWorked && alreadyAdditionalWorked > additionalWorkTime) {\r\n        additionalWorkedTime = (alreadyAdditionalWorked - additionalWorkTime) / (workDayLength / mainWorkTime);\r\n    }\r\n\r\n    return Math.round(mainWorkTime - alreadyMainWorked - additionalWorkedTime);\r\n}\r\n\r\nexport const calcWorkAmount = ({ additionalWorkTime, mainWorkTime, workDayLength, alreadyAdditionalWorked, alreadyMainWorked }: IWorkAmountProps): number => {\r\n    if (!mainWorkTime) return 0;\r\n\r\n    if (!alreadyAdditionalWorked && !alreadyMainWorked) return 0;\r\n\r\n    let worked = 0;\r\n\r\n    if (alreadyAdditionalWorked && alreadyAdditionalWorked > additionalWorkTime) {\r\n        if (!alreadyMainWorked) worked += alreadyAdditionalWorked;\r\n        else worked += alreadyAdditionalWorked - additionalWorkTime;\r\n    }\r\n\r\n    return Math.round((workDayLength / mainWorkTime) * alreadyMainWorked + worked);\r\n}\r\n\r\nexport const setStorageState = <T extends {}>(\r\n    state: T,\r\n    newState: T | ((data: T) => T),\r\n    keys: Array<keyof T>,\r\n    wrapperKey?: string,\r\n    callback?: (data: T) => void,\r\n) => {\r\n    let resultState: T;\r\n\r\n    if (typeof newState === 'function') {\r\n        resultState = { ...state, ...(newState as Function)(state) };\r\n    } else {\r\n        resultState = { ...state, ...newState };\r\n    }\r\n\r\n    if (wrapperKey) {\r\n        const existState = JSON.parse(localStorage.getItem(wrapperKey) || '{}');\r\n        localStorage.setItem(wrapperKey, JSON.stringify({ ...existState, ...resultState }))\r\n    }\r\n    else keys.forEach(k => localStorage.setItem(`${k}`, JSON.stringify(resultState[k])));\r\n\r\n    callback?.(resultState);\r\n};\r\n\r\nexport const getStorageState = <T extends {}>(\r\n    keys: Array<keyof T>,\r\n    initialState?: T,\r\n    wrapperKey?: string\r\n) => {\r\n    const commonState = {} as T;\r\n\r\n    if (wrapperKey) {\r\n        const savedState = JSON.parse(localStorage.getItem(wrapperKey) as string) as T;\r\n\r\n        savedState && (Object.keys(savedState) as Array<keyof T>).forEach(k => {\r\n            if (savedState[k] !== null && savedState[k] !== undefined) commonState[k] = savedState[k];\r\n        });\r\n    } else {\r\n        keys.forEach(k => {\r\n            const record = JSON.parse(localStorage.getItem(`${k}`) as string);\r\n\r\n            if (record !== null && record !== undefined) commonState[k] = record;\r\n        });\r\n    }\r\n\r\n    if (initialState) {\r\n        (Object.keys(initialState) as Array<keyof T>).forEach(k => commonState[k] = commonState[k] ?? initialState[k]);\r\n    }\r\n\r\n    return commonState;\r\n}\r\n\r\nexport const formatDate = (value: number, workRemainderType: 'minutes' | 'hours') => {\r\n    if (workRemainderType === 'minutes') return `${value < 0 ? '- ' : ''}${Math.abs(value)}`;\r\n\r\n    const mathFn = value >= 0 ? 'floor' : 'ceil';\r\n    const minutes = Math[mathFn](value % MINUTES_IN_HOUR);\r\n    const hours = Math[mathFn](value / MINUTES_IN_HOUR);\r\n    const sign = minutes < 0 || hours < 0 ? '- ' : '';\r\n    const stringMinutes = `${Math.abs(minutes)}`;\r\n    const stringHours = `${Math.abs(hours)}`;\r\n\r\n    return `${sign}${stringHours.length === 1 ? '0' + stringHours : stringHours} : ${stringMinutes.length === 1 ? '0' + stringMinutes : stringMinutes}`;\r\n}\r\n","import {\r\n    ImportData,\r\n    SetAdditionalWorkTime,\r\n    SetAlreadyWorkedAdditionalTime,\r\n    SetAlreadyWorkedMainTime,\r\n    SetMainWorkTime,\r\n    SetWorkDayLength\r\n} from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\nexport const actionCreators = {\r\n    setMainWorkTime: (payload: number): SetMainWorkTime => ({ type: Actions.MAIN_WORK_TIME_CHANGE, payload }),\r\n    setAdditionalWorkTime: (payload: number): SetAdditionalWorkTime => ({ type: Actions.ADDITIONAL_WORK_TIME_CHANGE, payload }),\r\n    setWorkDayLength: (payload: number): SetWorkDayLength => ({ type: Actions.WORK_DAY_LENGTH_CHANGE, payload }),\r\n    setAlreadyWorkedMainTime: (payload: number): SetAlreadyWorkedMainTime => ({ type: Actions.ALREADY_MAIN_WORKED_TIME_CHANGE, payload }),\r\n    setAlreadyWorkedAdditionalTime: (payload: number): SetAlreadyWorkedAdditionalTime => ({ type: Actions.ALREADY_ADDITIONAL_WORKED_TIME_CHANGE, payload }),\r\n    importData: (): ImportData => ({ type: Actions.IMPORT_DATA })\r\n}\r\n","export enum Actions {\r\n    REMAINDER_CHANGE = 'remainderChange',\r\n}\r\n","import {\r\n    MINUTES_IN_HOUR, STANDARD_WORK_DAY, WRAPPER_KEY, clone, setStorageState,ADDITIONAL_WORK_KEY, COUNTERS_KEY,\r\n    MAIN_WORK_KEY\r\n} from '../../../misc';\r\nimport { IState, TActions, SetMainWorkTime } from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\nconst stateModifiers = {\r\n    [Actions.MAIN_WORK_TIME_CHANGE]: (state: IState, payload: number): IState => ({\r\n        ...state,\r\n        mainWorkTime: payload\r\n    }),\r\n    [Actions.ADDITIONAL_WORK_TIME_CHANGE]: (state: IState, payload: number): IState => ({\r\n        ...state,\r\n        additionalWorkTime: payload\r\n    }),\r\n    [Actions.WORK_DAY_LENGTH_CHANGE]: (state: IState, payload: number): IState => ({\r\n        ...state,\r\n        workDayLength: payload\r\n    }),\r\n    [Actions.ALREADY_MAIN_WORKED_TIME_CHANGE]: (state: IState, payload: number) => ({\r\n        ...state,\r\n        alreadyMainWorked: payload\r\n    }),\r\n    [Actions.ALREADY_ADDITIONAL_WORKED_TIME_CHANGE]: (state: IState, payload: number) => ({\r\n        ...state,\r\n        alreadyAdditionalWorked: payload\r\n    }),\r\n    [Actions.IMPORT_DATA]: (state: IState) => {\r\n        const countersData = JSON.parse(localStorage.getItem(COUNTERS_KEY) as string);\r\n\r\n        if (!countersData) return state;\r\n\r\n        const currentDayStart = +new Date(new Date().setHours(0, 0, 0, 0));\r\n        const currentDayEnd = +new Date(new Date().setHours(23, 59, 59, 59));\r\n\r\n        const ids = countersData.ids?.filter((id: number) => +id <= currentDayEnd && +id >= currentDayStart);\r\n\r\n        if (ids.length) {\r\n            ids.forEach((id: number) => {\r\n                if (countersData.data[id].name === MAIN_WORK_KEY)\r\n                    state.alreadyMainWorked = Math.floor(countersData.data[id].savedTime / 60) ?? 0;\r\n                if (countersData.data[id].name === ADDITIONAL_WORK_KEY)\r\n                    state.alreadyAdditionalWorked = Math.floor(countersData.data[id].savedTime / 60) ?? 0;\r\n            });\r\n        }\r\n\r\n        return state;\r\n    }\r\n}\r\n\r\nexport const initialState: IState = {\r\n    workDayLength: MINUTES_IN_HOUR * STANDARD_WORK_DAY,\r\n    mainWorkTime: 0,\r\n    additionalWorkTime: 0,\r\n    alreadyMainWorked: 0,\r\n    alreadyAdditionalWorked: 0\r\n}\r\n\r\nexport const timeReducer = (state: IState = initialState, action: TActions): IState => {\r\n    if (!stateModifiers[action.type]) return { ...state };\r\n\r\n    const newState = stateModifiers[action.type](clone(state, true), (action as SetMainWorkTime).payload as number);\r\n\r\n    setStorageState(state, newState, Object.keys(initialState) as Array<keyof IState>, WRAPPER_KEY);\r\n\r\n    return newState;\r\n}\r\n","import { SetRemainderType } from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\nexport const actionCreators = {\r\n    setRemainderType: (): SetRemainderType => ({ type: Actions.REMAINDER_CHANGE }),\r\n}\r\n","import { WRAPPER_KEY, setStorageState } from '../../../misc';\r\nimport { IState, TActions } from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\nexport const initialState: IState = {\r\n    remainderViewType: 'minutes'\r\n}\r\n\r\nexport const viewReducer = (state: IState = initialState, action: TActions): IState => {\r\n    let newState = { ...state };\r\n\r\n    switch (action.type) {\r\n        case Actions.REMAINDER_CHANGE:\r\n            newState.remainderViewType = state.remainderViewType === 'minutes' ? 'hours' : 'minutes';\r\n            break;\r\n        default:\r\n            return { ...state };\r\n    }\r\n\r\n    setStorageState(state, newState, Object.keys(initialState) as Array<keyof IState>, WRAPPER_KEY);\r\n\r\n    return { ...newState };\r\n}\r\n","import { timeReducer, actionCreators as timeActionCreators, initialState as timeState, IState as TimeState } from './timeReducer';\r\nimport { viewReducer, actionCreators as viewActionCreators, initialState as viewState, IState as ViewState } from './viewReducer';\r\n\r\nexport const initialState = {\r\n    ...timeState,\r\n    ...viewState\r\n}\r\n\r\n\r\nexport const reducers = {\r\n    timeReducer,\r\n    viewReducer\r\n};\r\n\r\nexport const actionCreators = {\r\n    ...timeActionCreators,\r\n    ...viewActionCreators\r\n};\r\n\r\nexport interface IState extends TimeState, ViewState {}\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { FormGroup, Input, Label } from 'reactstrap';\r\nimport { InputType } from 'reactstrap/es/Input';\r\nimport { HTMLAttributes } from 'react';\r\n\r\ninterface IProps extends HTMLAttributes<HTMLInputElement> {\r\n    labelText?: string;\r\n    type?: InputType;\r\n    value?: string | number;\r\n    disabled?: boolean;\r\n    readOnly?: boolean;\r\n}\r\n\r\nexport const InputItem = ({ labelText, children, id, value, ...rest }: IProps = { type: 'number' }) => {\r\n\r\n    return (\r\n        <FormGroup>\r\n            <Label for={ id }>{ labelText }</Label>\r\n            <Input name={ id } id={ id } value={ value || value === 0 ? value : '' } { ...rest } />\r\n            { children }\r\n        </FormGroup>\r\n    )\r\n}\r\n","import { calcWorkAmount, formatDate, totalCalc } from '../misc';\r\nimport { ChangeEventHandler, HTMLAttributes } from 'react';\r\nimport { useActions, useTypedSelector } from '../hooks';\r\nimport { InputItem } from './InputItem';\r\nimport { Form } from 'reactstrap';\r\n\r\ninterface IProps extends HTMLAttributes<HTMLDivElement> {}\r\n\r\nexport const ContentContainer = ({ className, ...rest }: IProps) => {\r\n    const {\r\n        setMainWorkTime, setAdditionalWorkTime, setAlreadyWorkedAdditionalTime, setAlreadyWorkedMainTime,\r\n        setWorkDayLength, importData, setRemainderType\r\n    } = useActions();\r\n    const { timeReducer: state, viewReducer: viewState } = useTypedSelector(state => state);\r\n\r\n    const onWorkDayLengthChange: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => setWorkDayLength(+value);\r\n    const onMainJobTimeChange: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => setMainWorkTime(+value);\r\n    const onAdditionalJobTimeChange: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => setAdditionalWorkTime(+value);\r\n    const onWorkedMainChange: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => setAlreadyWorkedMainTime(+value);\r\n    const onAdditionalWorked: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => setAlreadyWorkedAdditionalTime(+value);\r\n\r\n    return (\r\n        <div className=\"w-100 content-container\">\r\n            <div className={`p-3 position-relative ${className}`} { ...rest }>\r\n                <span className=\"position-absolute\"\r\n                      title=\"импортировать данные\"\r\n                      style={{ top: 5, right: 10, cursor: 'pointer' }}\r\n                      onClick={ importData }>\r\n                    &#9986;\r\n                </span>\r\n\r\n                <Form>\r\n                    <InputItem id=\"workTimeLength\"\r\n                               labelText=\"Длительность рабочего дня\"\r\n                               placeholder=\"Длительность рабочего дня\"\r\n                               value={ state.workDayLength }\r\n                               onChange={ onWorkDayLengthChange } />\r\n                    <InputItem id=\"mainWorkTime\"\r\n                               labelText=\"Основной рабочий эквивалент\"\r\n                               placeholder=\"Эквивалент 8 рабочим часам\"\r\n                               value={ state.mainWorkTime }\r\n                               onChange={ onMainJobTimeChange } />\r\n                    <InputItem id=\"additionalWorkTime\"\r\n                               labelText=\"Дополнительное необязательно время\"\r\n                               placeholder=\"Дополнительное время, которое невключено в основное, но тоже можно отработать\"\r\n                               value={ state.additionalWorkTime }\r\n                               onChange={ onAdditionalJobTimeChange } />\r\n                </Form>\r\n            </div>\r\n\r\n            <div className={`p-3 mt-5 ${className}`} { ...rest }>\r\n                <Form>\r\n                    <InputItem id=\"workedMain\"\r\n                               labelText=\"Отработано основного времени\"\r\n                               placeholder=\"Сколько основного отработано\"\r\n                               value={ state.alreadyMainWorked }\r\n                               onChange={ onWorkedMainChange } />\r\n                    <InputItem id=\"workedAdditional\"\r\n                               labelText=\"Отработано дополнительного времени\"\r\n                               placeholder=\"Сколько дополнительного отработано\"\r\n                               value={ state.alreadyAdditionalWorked }\r\n                               onChange={ onAdditionalWorked } />\r\n                </Form>\r\n            </div>\r\n\r\n            <div className={`p-3 mt-5 ${className}`} { ...rest }>\r\n                <Form className='position-relative'>\r\n                    <InputItem id=\"totalWorkTime\"\r\n                               type=\"text\"\r\n                               placeholder=\"Введите время выше и получите рассчёт\"\r\n                               labelText='Всего необходимо отработать'\r\n                               value={ formatDate(totalCalc(state), viewState.remainderViewType) }\r\n                               disabled\r\n                               readOnly>\r\n                        <span className=\"position-absolute\"\r\n                              title=\"сменить способ показа времени\"\r\n                              style={{ top: -5, right: 10, cursor: 'pointer' }}\r\n                              onClick={ setRemainderType }>\r\n                            &#9854;\r\n                        </span>\r\n                    </InputItem>\r\n\r\n                    <InputItem id=\"totalWorkTime\"\r\n                               type=\"text\"\r\n                               placeholder=\"Введите время выше и получите рассчёт\"\r\n                               labelText='Уже отработано в пересчете на длительность рабочего дня'\r\n                               value={ formatDate(calcWorkAmount(state), viewState.remainderViewType) }\r\n                               disabled\r\n                               readOnly />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { actionCreators } from '../store/reducers/';\r\nimport { bindActionCreators } from 'redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AppDispatch } from '../store';\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch<AppDispatch>();\r\n\r\n    return bindActionCreators(actionCreators, dispatch);\r\n}\r\n","import { ContentContainer } from './ContentContainer';\r\nimport { Container } from 'reactstrap';\r\n\r\nimport './App.sass';\r\n\r\nexport const App = () => {\r\n    return (\r\n        <Container fluid className=\"bg-dark d-flex justify-content-center\" style={{ minHeight: '100vh', padding: '70px 3rem 20px' }}>\r\n            <ContentContainer className=\"bg-white\" />\r\n        </Container>\r\n    )\r\n};\r\n","import { reducers, initialState, IState } from './reducers';\r\nimport { getStorageState, WRAPPER_KEY } from '../misc';\r\nimport { combineReducers, createStore } from 'redux';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\nconst { remainderViewType,...state } = getStorageState<IState>(\r\n    Object.keys(initialState) as Array<keyof IState>, initialState, WRAPPER_KEY\r\n)\r\n\r\nexport const store = createStore(rootReducer, { timeReducer: state, viewReducer: { remainderViewType } });\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport { initialState };\r\nexport type { IState };\r\n","import { default as ReactDOM } from 'react-dom';\r\nimport { App } from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}