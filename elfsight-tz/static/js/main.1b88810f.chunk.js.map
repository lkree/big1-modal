{"version":3,"sources":["store/reducers/dataReducer/actions.ts","store/reducers/dataReducer/reducer.ts","common/filters.ts","store/reducers/dataReducer/actionCreators.ts","common/constants.ts","common/utils.ts","store/reducers/popupReducer/actions.ts","store/reducers/dataReducer/utils.ts","store/reducers/popupReducer/reducer.ts","store/reducers/filterReducer/actions.ts","store/reducers/popupReducer/actionCreators.ts","store/reducers/filterReducer/utils.ts","store/reducers/filterReducer/reducer.ts","store/reducers/filterReducer/actionCreators.ts","store/reducers/index.ts","store/thunk/utils.ts","hooks/useActions.ts","hooks/useTypedSelector.ts","components/PaginationWrapper.tsx","components/PopupContainer.tsx","components/InputFilter.tsx","components/SelectFilter.tsx","components/FilterPanel.tsx","components/SmallCard.tsx","components/CardWrapper.tsx","components/Error.tsx","components/Header.tsx","components/App.tsx","store/index.ts","index.tsx"],"names":["Actions","Filters","initialState","processInfo","isLoading","error","renderData","meta","actionCreators","setIsLoading","payload","type","SetIsLoading","setData","SetData","setError","SetError","CHARACTER_URL","getCurrentPageNumber","prev","next","pages","result","split","length","getUrlWithPageNumber","url","pageNumber","getUrlWithFilters","filters","filterNames","Object","keys","firstFilterName","value","slice","reduce","battery","filterName","FILTER_TYPES","Name","placeHolderText","Type","Species","Status","options","Gender","downloadData","dispatch","actionSetSuccess","actionSetError","fetch","then","r","json","catch","getNextPage","pageType","status","children","open","Open","close","Close","getHasChanges","state","some","k","Boolean","isFiltered","hasChanges","setFiltered","SetFiltered","setChanges","filterType","SetChanges","resetFilters","ResetFilters","reducers","dataState","popupState","filterState","dataReducer","action","results","info","popupReducer","filterReducer","newState","dataActionCreators","popupActionCreators","filterActionCreators","dispatchThunk","callback","args","dispatchCallback","useActions","useDispatch","bindActionCreators","useTypedSelector","useSelector","PaginationWrapper","getPage","currentPage","Pagination","className","PaginationItem","disabled","PaginationLink","href","onClick","active","PopupContainer","isOpened","Modal","isOpen","toggle","size","ModalHeader","ModalBody","InputFilter","onChange","labelText","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","target","SelectFilter","selectorText","headerText","filterValues","useState","setIsOpen","InputGroupButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","header","map","FilterPanel","isPanelOpen","setIsPanelOpen","onPanelIconClick","Button","color","FilledIcon","props","stroke","fill","strokeWidth","viewBox","height","ICON_SIZE","width","xmlns","d","fillRule","clipRule","EmptyIcon","SmallCard","item","enableNameClick","src","image","alt","id","data","name","location","origin","CardWrapper","Spinner","style","ErrorContainer","Header","App","Container","fluid","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.1b88810f.chunk.js","sourcesContent":["export enum Actions {\r\n    SetData = 'SetData',\r\n    SetError = 'SetError',\r\n    SetIsLoading = 'SetIsLoading'\r\n}\r\n","import { IState, TActions } from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\n\r\nexport const initialState: IState = {\r\n    processInfo: { isLoading: false, error: null },\r\n    renderData: [],\r\n    meta: {} as IState['meta']\r\n}\r\n\r\nexport const dataReducer = (state: IState = initialState, action: TActions): IState => {\r\n    switch (action.type) {\r\n        case Actions.SetData:\r\n            if (!action.payload.results) {\r\n                return {\r\n                    ...state,\r\n                    renderData: [],\r\n                    meta: {} as IState['meta'],\r\n                    processInfo: { isLoading: false, error: 'К сожалению никто не нашёлся. Попробуй изменить параметры фильтрации.' }\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                renderData: action.payload.results,\r\n                meta: action.payload.info ?? {},\r\n                processInfo: { isLoading: false, error: null }\r\n            };\r\n        case Actions.SetError:\r\n            return {\r\n                ...state,\r\n                processInfo: { isLoading: false, error: action.payload }\r\n            }\r\n        case Actions.SetIsLoading:\r\n            return {\r\n                ...state,\r\n                processInfo: { isLoading: action.payload, error: null }\r\n            }\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n","export type TInputFilter = { type: 'input', placeHolderText: string };\r\nexport type TSelectFilter = { type: 'select', options: string[] };\r\n\r\nexport type IFilter = TInputFilter | TSelectFilter;\r\n\r\nexport enum Filters {\r\n    Name = 'name',\r\n    Status = 'status',\r\n    Species = 'species',\r\n    Gender = 'gender',\r\n    Type = 'type'\r\n}\r\n\r\nexport const FILTER_TYPES: Record<Filters, IFilter> = {\r\n    [Filters.Name]: {\r\n        type: 'input',\r\n        placeHolderText: 'как зовут?'\r\n    },\r\n    [Filters.Type]: {\r\n        type: 'input',\r\n        placeHolderText: 'какой тип?'\r\n    },\r\n    [Filters.Species]: {\r\n        type: 'input',\r\n        placeHolderText: 'какая раса?'\r\n    },\r\n    [Filters.Status]: {\r\n        type: 'select',\r\n        options: ['Alive', 'Dead', 'unknown']\r\n    },\r\n    [Filters.Gender]: {\r\n        type: 'select',\r\n        options: ['male', 'female', 'genderless', 'unknown']\r\n    }\r\n}\r\n","import { SetData, SetError, SetIsLoading } from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\nexport const actionCreators = {\r\n    setIsLoading: (payload: SetIsLoading['payload']): SetIsLoading => ({ type: Actions.SetIsLoading, payload }),\r\n    setData: (payload: SetData['payload']): SetData  => ({ type: Actions.SetData, payload }),\r\n    setError: (error: SetError['payload']): SetError => ({ type: Actions.SetError, payload: error })\r\n}\r\n","export const COMMON_URL = 'https://rickandmortyapi.com/api';\r\nexport const CHARACTER_URL = `${COMMON_URL}/character`;\r\n","import { ILoadMeta } from './interfaces';\r\nimport { Filters } from './filters';\r\nimport { CHARACTER_URL } from './constants';\r\n\r\nexport const getCurrentPageNumber = (meta: ILoadMeta): number => {\r\n    if (!meta.prev) return 1;\r\n    if (!meta.next) return meta.pages;\r\n\r\n    const result = meta.prev.split('page=');\r\n\r\n    return +result[result.length - 1].split('&')[0] + 1;\r\n}\r\n\r\nexport const getUrlWithPageNumber = (url: string, pageNumber: string | number) => `${url}?page=${pageNumber}`;\r\n\r\nexport const getUrlWithFilters = (filters: Partial<Record<Filters, { value: string }>> = {}) => {\r\n    const filterNames = Object.keys(filters) as Filters[];\r\n    const firstFilterName = filterNames[0];\r\n\r\n    return `${CHARACTER_URL}?${firstFilterName}=${filters[firstFilterName]?.value}${\r\n        filterNames\r\n            .slice(1)\r\n            .reduce((battery, filterName: Filters) => {\r\n                battery += `&${filterName}=${filters[filterName]?.value}`;\r\n                return battery;\r\n            }, '')\r\n    }`;\r\n}\r\n","export enum Actions {\r\n    Open = 'Open',\r\n    Close = 'Close'\r\n}\r\n","import { CHARACTER_URL, getCurrentPageNumber, getUrlWithPageNumber, ILoadMeta } from '../../../common';\r\nimport { actionCreators } from './actionCreators';\r\nimport { TPageType } from './interfaces';\r\n\r\ninterface IDownloadData {\r\n    url?: string;\r\n    actionSetSuccess?: (data: any) => any;\r\n    actionSetError?: typeof actionCreators.setError;\r\n}\r\n\r\nexport const downloadData = (\r\n    dispatch: Function,\r\n    {\r\n        url = CHARACTER_URL,\r\n        actionSetSuccess = actionCreators.setData,\r\n        actionSetError = actionCreators.setError\r\n    }: IDownloadData = {\r\n        url: CHARACTER_URL,\r\n        actionSetSuccess: actionCreators.setData,\r\n        actionSetError: actionCreators.setError\r\n    }\r\n) => fetch(url)\r\n        .then((r) => r.json())\r\n        .then((result) => dispatch(actionSetSuccess(result)))\r\n        .catch(() => actionSetError('something goes wrong'));\r\n\r\n\r\nexport const getNextPage = (dispatch: Function, pageType: TPageType, meta: ILoadMeta) => {\r\n    switch (pageType) {\r\n        case 'first':\r\n            return downloadData(dispatch);\r\n        case 'next':\r\n            return downloadData(dispatch, { url: meta.next });\r\n        case 'last':\r\n            return downloadData(dispatch, { url: getUrlWithPageNumber(CHARACTER_URL, meta.pages) });\r\n        case 'prev':\r\n            return downloadData(dispatch, { url: getUrlWithPageNumber(CHARACTER_URL, +getCurrentPageNumber(meta) - 1) });\r\n    }\r\n}\r\n","import { IState, TActions } from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\n\r\nexport const initialState: IState = {\r\n    status: 'closed',\r\n    children: {} as IState['children']\r\n}\r\n\r\nexport const popupReducer = (state: IState = initialState, action: TActions): IState => {\r\n    switch (action.type) {\r\n        case Actions.Close:\r\n            return initialState;\r\n        case Actions.Open:\r\n            return {\r\n                status: 'opened',\r\n                children: action.children\r\n            }\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n","export enum Actions {\r\n    SetFiltered = 'SetFiltered',\r\n    SetChanges = 'SetChanges',\r\n    ResetFilters = 'ResetFilters'\r\n}\r\n","import { Open, Close } from './interfaces';\r\nimport { Actions } from './actions';\r\n\r\nexport const actionCreators = {\r\n    open: (children: Open['children']): Open => ({ type: Actions.Open, children }),\r\n    close: (): Close  => ({ type: Actions.Close }),\r\n}\r\n","import { IState } from './interfaces';\r\nimport { Filters } from '../../../common';\r\n\r\nexport const getHasChanges = (state: IState) =>\r\n    Object.keys(state.filters ?? []).some((k) => Boolean(state.filters?.[k as Filters]?.value));\r\n","import { IState, TActions } from './interfaces';\r\nimport { Actions } from './actions';\r\nimport { getHasChanges } from './utils';\r\n\r\n\r\nexport const initialState: IState = {\r\n    isFiltered: false,\r\n    hasChanges: false,\r\n    filters: {} as IState['filters']\r\n}\r\n\r\nexport const filterReducer = (state: IState = initialState, action: TActions): IState => {\r\n    switch (action.type) {\r\n        case Actions.ResetFilters:\r\n        return {\r\n            ...state,\r\n            hasChanges: false,\r\n            isFiltered: false,\r\n            filters: {}\r\n        }\r\n        case Actions.SetFiltered:\r\n            return {\r\n                ...state,\r\n                isFiltered: action.payload\r\n            }\r\n        case Actions.SetChanges:\r\n            const newState = {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    [action.filterType]: {\r\n                        value: action.payload\r\n                    }\r\n                }\r\n            };\r\n\r\n            newState.hasChanges = getHasChanges(newState);\r\n\r\n            return newState;\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n","import { SetFiltered, SetChanges, ResetFilters } from './interfaces';\r\nimport { Filters } from '../../../common';\r\nimport { Actions } from './actions';\r\n\r\ninterface ISetChangesProps {\r\n    payload: string;\r\n    filterType: Filters;\r\n}\r\n\r\nexport const actionCreators = {\r\n    setFiltered: (payload: boolean): SetFiltered => ({ type: Actions.SetFiltered, payload }),\r\n    setChanges: ({ payload, filterType }: ISetChangesProps): SetChanges => ({ type: Actions.SetChanges, payload, filterType }),\r\n    resetFilters: (): ResetFilters => ({ type: Actions.ResetFilters })\r\n}\r\n","import {\r\n    dataReducer, actionCreators as dataActionCreators, initialState as dataState, IState as IDataState, TActions as DataActions\r\n} from './dataReducer';\r\nimport {\r\n    popupReducer, actionCreators as popupActionCreators, initialState as popupState, IState as IPopupState, TActions as PopupActions\r\n} from './popupReducer';\r\nimport {\r\n    filterReducer, actionCreators as filterActionCreators, initialState as filterState, IState as IFilterState, TActions as FilterActions\r\n} from './filterReducer';\r\n\r\nexport const initialState = {\r\n    ...dataState,\r\n    ...popupState,\r\n    ...filterState\r\n}\r\n\r\nexport const reducers = {\r\n    dataReducer,\r\n    popupReducer,\r\n    filterReducer\r\n}\r\n\r\nexport const actionCreators = {\r\n    ...dataActionCreators,\r\n    ...popupActionCreators,\r\n    ...filterActionCreators\r\n}\r\n\r\nexport interface IState extends IDataState, IPopupState, IFilterState {}\r\nexport type TActions = DataActions & PopupActions & FilterActions;\r\n\r\nexport { downloadData, getNextPage } from './dataReducer';\r\nexport type { TPageType } from './dataReducer';\r\n","import { ParamsWithOutDispatch, SomeFunction } from '../../common';\r\nimport { actionCreators } from '../reducers';\r\nimport { AppDispatch } from '../index';\r\n\r\ninterface IDispatchProps {\r\n    dispatch: AppDispatch;\r\n    callback: SomeFunction;\r\n    setIsLoading?: boolean;\r\n}\r\n\r\nexport const dispatchThunk = <T extends SomeFunction = SomeFunction>(\r\n    { dispatch, setIsLoading = true, callback }: IDispatchProps,\r\n    ...args: ParamsWithOutDispatch<T>\r\n) => {\r\n    if (setIsLoading) {\r\n        dispatch(actionCreators.setIsLoading(true));\r\n    }\r\n\r\n    dispatch((dispatchCallback: Function) => callback(dispatchCallback, ...args));\r\n}\r\n\r\n","import { actionCreators } from '../store/reducers';\r\nimport { bindActionCreators } from 'redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AppDispatch } from '../store';\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch<AppDispatch>();\r\n\r\n    return bindActionCreators(actionCreators, dispatch);\r\n}\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\nimport { getNextPage, TPageType } from '../store/reducers';\r\nimport { getCurrentPageNumber } from '../common';\r\nimport { dispatchThunk } from '../store/thunk';\r\nimport { useTypedSelector } from '../hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AppDispatch } from '../store';\r\nimport { FC } from 'react';\r\n\r\nexport const PaginationWrapper: FC = () => {\r\n    const { dataReducer, dataReducer: { meta } } = useTypedSelector(state => state);\r\n    const dispatch: AppDispatch = useDispatch();\r\n\r\n    if (dataReducer.processInfo.isLoading || meta?.pages < 2) {\r\n        return <></>;\r\n    }\r\n\r\n    const getPage = (pageType: TPageType) => dispatchThunk<typeof getNextPage>({ dispatch, callback: getNextPage }, pageType, dataReducer.meta);\r\n    const currentPage = getCurrentPageNumber(meta);\r\n\r\n    return (\r\n        <Pagination className='pt-2'>\r\n            <PaginationItem disabled={ currentPage === 1 }>\r\n                <PaginationLink href='#'\r\n                                onClick={ () => getPage('first') }>{ '<<' }</PaginationLink>\r\n            </PaginationItem>\r\n            <PaginationItem disabled={ currentPage === 1 }>\r\n                <PaginationLink href='#'\r\n                                onClick={ () => getPage('prev') }>{ '<' }</PaginationLink>\r\n            </PaginationItem>\r\n            <PaginationItem active>\r\n                <PaginationLink>{ currentPage }</PaginationLink>\r\n            </PaginationItem>\r\n            <PaginationItem disabled={ currentPage === meta.pages }>\r\n                <PaginationLink href='#'\r\n                                onClick={ () => getPage('next') }>{ '>' }</PaginationLink>\r\n            </PaginationItem>\r\n            <PaginationItem disabled={ currentPage === meta.pages }>\r\n                <PaginationLink href='#'\r\n                                onClick={ () => getPage('last') }>{ '>>' }</PaginationLink>\r\n            </PaginationItem>\r\n        </Pagination>\r\n    )\r\n};\r\n","import { Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { useActions, useTypedSelector } from '../hooks';\r\nimport { FC } from 'react';\r\n\r\nexport const PopupContainer: FC = () => {\r\n    const { popupReducer } = useTypedSelector(state => state);\r\n    const isOpened = popupReducer.status === 'opened';\r\n    const { close } = useActions();\r\n\r\n    return (\r\n        <Modal isOpen={ isOpened } toggle={ close } size='lg'>\r\n            <ModalHeader toggle={ close }>Character</ModalHeader>\r\n            <ModalBody>{ isOpened ? popupReducer.children : <></> }</ModalBody>\r\n        </Modal>\r\n    );\r\n}\r\n","import { Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\r\nimport { ChangeEvent, FC } from 'react';\r\nimport { Filters } from '../common';\r\nimport { useTypedSelector } from '../hooks';\r\n\r\ninterface IOptions {\r\n    onChange?: (value: string, filterType: Filters) => any;\r\n    labelText: string;\r\n    placeHolderText?: string;\r\n    className?: string;\r\n    filterName: Filters;\r\n}\r\n\r\nexport const InputFilter: FC<IOptions> = ({ onChange, labelText, placeHolderText, className, filterName }) => {\r\n    const { filterReducer: { filters } } = useTypedSelector(state => state);\r\n    const onFilterChange = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => onChange?.(value, filterName);\r\n\r\n    return (\r\n        <InputGroup className={ className + ' p-2' }>\r\n            <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>{ labelText }</InputGroupText>\r\n            </InputGroupAddon>\r\n\r\n            <Input placeholder={ placeHolderText } value={ filters?.[filterName]?.value ?? '' } onChange={ onFilterChange } />\r\n        </InputGroup>\r\n    )\r\n}\r\n","import { DropdownItem, DropdownMenu, DropdownToggle, InputGroup, InputGroupButtonDropdown } from 'reactstrap';\r\nimport { Filters, TSelectFilter } from '../common';\r\nimport { useTypedSelector } from '../hooks';\r\nimport { FC, useState } from 'react';\r\n\r\ninterface IOptions {\r\n    selectorText: string;\r\n    headerText?: string;\r\n    filterType: Filters;\r\n    filterValues: TSelectFilter;\r\n    onChange?: (value: string, filterType: Filters) => any;\r\n}\r\n\r\nexport const SelectFilter: FC<IOptions> = ({ selectorText, headerText, filterValues, filterType, onChange }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const { filterReducer: { filters } } = useTypedSelector(state => state);\r\n    const toggleDropDown = () => setIsOpen(!isOpen);\r\n    const renderItems = () => filterValues.options.map((value) => (\r\n        <DropdownItem key={ value }\r\n                      disabled={ value === filters?.[filterType]?.value }\r\n                      onClick={ () => onChange?.(value, filterType) }>\r\n            { value }\r\n        </DropdownItem>\r\n    ));\r\n\r\n    return (\r\n        <InputGroup className='p-2'>\r\n            <InputGroupButtonDropdown addonType='prepend' isOpen={ isOpen } toggle={ toggleDropDown }>\r\n                <DropdownToggle caret>{ selectorText }</DropdownToggle>\r\n                <DropdownMenu>\r\n                    <DropdownItem onClick={ () => onChange?.('', filterType) }>сбросить</DropdownItem>\r\n                    <DropdownItem divider />\r\n                    {\r\n                        headerText &&\r\n                        <>\r\n                           <DropdownItem header>{ headerText }</DropdownItem>\r\n                           <DropdownItem divider />\r\n                        </>\r\n                    }\r\n\r\n                    { renderItems() }\r\n                </DropdownMenu>\r\n            </InputGroupButtonDropdown>\r\n        </InputGroup>\r\n    )\r\n}\r\n","import { FILTER_TYPES, Filters, getUrlWithFilters, TInputFilter, TSelectFilter } from '../common';\r\nimport { Button, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { useActions, useTypedSelector } from '../hooks';\r\nimport { downloadData } from '../store/reducers';\r\nimport { dispatchThunk } from '../store/thunk';\r\nimport { InputFilter } from './InputFilter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { FC, useState } from 'react';\r\n\r\nimport './FilterPanel.sass';\r\nimport { SelectFilter } from './SelectFilter';\r\n\r\nconst ICON_SIZE = 24;\r\n\r\nexport const FilterPanel: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { resetFilters, setFiltered } = useActions();\r\n    const { filterReducer } = useTypedSelector(state => state);\r\n    const [isPanelOpen, setIsPanelOpen] = useState(false);\r\n    const { setChanges } = useActions();\r\n    const onResetClick = () => {\r\n        resetFilters();\r\n        dispatchThunk<typeof downloadData>({ dispatch, callback: downloadData });\r\n    };\r\n    const onAcceptClick = () => {\r\n        setFiltered(true);\r\n        dispatchThunk<typeof downloadData>(\r\n            { dispatch, callback: downloadData },\r\n            { url: getUrlWithFilters(filterReducer.filters) }\r\n        );\r\n    };\r\n    const onPanelIconClick = () => setIsPanelOpen((state) => !state);\r\n    const renderFilters = () => (Object.keys(FILTER_TYPES) as Filters[]).map((filterName) => (\r\n        FILTER_TYPES[filterName].type === 'input'\r\n            ?                   <InputFilter labelText={ filterName }\r\n                                             key={ filterName }\r\n                                             placeHolderText={ (FILTER_TYPES[filterName] as TInputFilter).placeHolderText }\r\n                                             filterName={ filterName }\r\n                                             onChange={ (value, filterType) => setChanges({ filterType, payload: value }) } />\r\n            :                    <SelectFilter selectorText={ filterName }\r\n                                               key={ filterName }\r\n                                               filterValues={ FILTER_TYPES[filterName] as TSelectFilter }\r\n                                               filterType={ filterName }\r\n                                               onChange={ (value, filterType) => setChanges({ filterType, payload: value }) } />\r\n    ));\r\n\r\n    return (\r\n        <div className='RIMO__filterPanel'>\r\n            {\r\n                filterReducer.isFiltered\r\n                    ? <FilledIcon onClick={ onPanelIconClick } />\r\n                    : <EmptyIcon onClick={ onPanelIconClick } />\r\n            }\r\n\r\n            <Modal isOpen={ isPanelOpen } toggle={ onPanelIconClick }>\r\n               <ModalHeader toggle={ onPanelIconClick } className='position-relative'>\r\n                   Filter Panel\r\n                   { filterReducer.hasChanges &&\r\n                        <Button className='RIMO__filterPanel-icon'\r\n                                color='success'\r\n                                onClick={ onAcceptClick }>\r\n                           Accept\r\n                        </Button>\r\n                   }\r\n                   { filterReducer.isFiltered &&\r\n                        <Button className='RIMO__filterPanel-resetButton'\r\n                                color='link'\r\n                                size='sm'\r\n                                onClick={ onResetClick }>\r\n                           По умолчанию\r\n                        </Button>\r\n                   }\r\n               </ModalHeader>\r\n               <ModalBody>\r\n                   { renderFilters() }\r\n               </ModalBody>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FilledIcon = ({ ...props }) => (\r\n    <svg stroke=\"currentColor\"\r\n         fill=\"#fff\"\r\n         strokeWidth=\"0\"\r\n         viewBox=\"0 0 16 16\"\r\n         height={ICON_SIZE + 'px'}\r\n         width={ICON_SIZE + 'px'}\r\n         xmlns=\"http://www.w3.org/2000/svg\"\r\n         { ...props }>\r\n        <path d=\"M2 3.5v-2h12v2l-4.5 5v5l-3 1v-6L2 3.5z\"></path>\r\n        <path fillRule=\"evenodd\" d=\"M1.5 1.5A.5.5 0 012 1h12a.5.5 0 01.5.5v2a.5.5 0 01-.128.334L10 8.692V13.5a.5.5 0 01-.342.474l-3 1A.5.5 0 016 14.5V8.692L1.628 3.834A.5.5 0 011.5 3.5v-2zm1 .5v1.308l4.372 4.858A.5.5 0 017 8.5v5.306l2-.666V8.5a.5.5 0 01.128-.334L13.5 3.308V2h-11z\" clipRule=\"evenodd\"></path>\r\n    </svg>\r\n);\r\n\r\nconst EmptyIcon = ({ ...props }) => (\r\n    <svg stroke=\"currentColor\"\r\n         fill=\"#fff\"\r\n         strokeWidth=\"0\"\r\n         viewBox=\"0 0 16 16\"\r\n         height={ICON_SIZE + 'px'}\r\n         width={ICON_SIZE + 'px'}\r\n         xmlns=\"http://www.w3.org/2000/svg\"\r\n         { ...props }>\r\n        <path fillRule=\"evenodd\" d=\"M1.5 1.5A.5.5 0 012 1h12a.5.5 0 01.5.5v2a.5.5 0 01-.128.334L10 8.692V13.5a.5.5 0 01-.342.474l-3 1A.5.5 0 016 14.5V8.692L1.628 3.834A.5.5 0 011.5 3.5v-2zm1 .5v1.308l4.372 4.858A.5.5 0 017 8.5v5.306l2-.666V8.5a.5.5 0 01.128-.334L13.5 3.308V2h-11z\" clipRule=\"evenodd\"></path>\r\n    </svg>\r\n)\r\n","import { downloadData } from '../store/reducers';\r\nimport { CHARACTER_URL, ICharacter } from '../common';\r\nimport { dispatchThunk } from '../store/thunk';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AppDispatch } from '../store';\r\nimport { useActions } from '../hooks';\r\nimport { FC } from 'react';\r\n\r\nimport './SmallCard.sass';\r\n\r\ninterface IOptions {\r\n    item?: ICharacter;\r\n    enableNameClick?: boolean;\r\n}\r\n\r\nexport const SmallCard: FC<IOptions> = ({ item, enableNameClick = true }: IOptions) => {\r\n    const { open } = useActions();\r\n    const dispatch: AppDispatch = useDispatch();\r\n\r\n    // здесь просто сделал загрузку, потому что могу\r\n    // а вообще, конечно, можно было использовать item, который у нас и так есть\r\n    const onNameClick = (id: number) =>\r\n        dispatchThunk<typeof downloadData>({\r\n                dispatch,\r\n                callback: downloadData,\r\n                setIsLoading: false\r\n            },\r\n            {\r\n                url: `${CHARACTER_URL}/${id}`,\r\n                actionSetSuccess: (data: ICharacter) => open(<SmallCard item={ data } enableNameClick={ false } />)\r\n            });\r\n\r\n    return (\r\n            <article className='RIMO__smallCard d-flex rounded'>\r\n                <div className='RIMO__smallCard-photo-wrapper w-100'>\r\n                    <img className='RIMO__smallCard-photo w-100 h-100'\r\n                         src={ item?.image }\r\n                         alt={ item?.type } />\r\n                </div>\r\n                <div className='RIMO__smallCard-info position-relative text-white d-flex flex-column'>\r\n                    <section className='RIMO__smallCard-content-wrapper d-flex flex-column'>\r\n                        <p className='RIMO__smallCard-name'\r\n                           onClick={ () => enableNameClick ? onNameClick(item!.id) : () => void 0 }>{ item?.name }</p>\r\n                        <span className='RIMO__smallCard-status d-flex align-items-center text-capitalize'>\r\n                            <span className={ 'RIMO__smallCard-status-icon RIMO__smallCard-status-icon--' + item?.status }></span>\r\n                            { item?.status }\r\n                        </span>\r\n                    </section>\r\n                    <section className='RIMO__smallCard-content-wrapper d-flex flex-column'>\r\n                        <span className='RIMO__smallCard-location-info-wrapper'>Last known location:</span>\r\n                        <p className='RIMO__smallCard-location-info'>{ item?.location.name }</p>\r\n                    </section>\r\n                    <section className='RIMO__smallCard-content-wrapper d-flex flex-column'>\r\n                        <span className='RIMO__smallCard-firstSeries-info'>First seen in:</span>\r\n                        <p className='RIMO__smallCard-firstSeries'>{ item?.origin?.name }</p>\r\n                    </section>\r\n                </div>\r\n            </article>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\nimport { SmallCard } from './SmallCard';\r\nimport { useTypedSelector } from '../hooks';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nexport const CardWrapper: FC = () => {\r\n    const { dataReducer } = useTypedSelector(state => state);\r\n    const generateCards = () => dataReducer.renderData.map((item) => <SmallCard key={ item.id } item={ item } />);\r\n\r\n    if (dataReducer.processInfo.isLoading) {\r\n        return <Spinner color='primary' style={{ width: '5vw', height: '5vw' }}> </Spinner>\r\n    }\r\n\r\n    return (\r\n        <main className='bg-white h-100 w-100 rounded p-2 d-flex flex-wrap justify-content-between'>\r\n            { generateCards() }\r\n        </main>\r\n    )\r\n};\r\n","import { FC } from 'react';\r\nimport { useTypedSelector } from '../hooks';\r\n\r\nexport const ErrorContainer: FC = ({ children }) => {\r\n    const { dataReducer: { processInfo: { error } } } = useTypedSelector(state => state);\r\n    if (error) return <div className='text-white'>{ error }</div>\r\n\r\n    return <>{ children }</>;\r\n}\r\n","import { FC } from 'react';\r\n\r\nimport './Header.sass';\r\n\r\nexport const Header: FC = () => {\r\n    return (\r\n        <header className='RIMO__header bg-info justify-content-center align-items-center d-flex text-white font-monospace'>\r\n            Rick and Morty Widget\r\n        </header>\r\n    )\r\n};\r\n","import { PaginationWrapper } from './PaginationWrapper';\r\nimport { PopupContainer } from './PopupContainer';\r\nimport { FilterPanel } from './FilterPanel';\r\nimport { CardWrapper } from './CardWrapper';\r\nimport { ErrorContainer } from './Error';\r\nimport { Container } from 'reactstrap';\r\nimport { Header } from './Header';\r\nimport { FC } from 'react';\r\n\r\nimport './App.sass';\r\n\r\nexport const App: FC = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Container fluid className=\"bg-dark RIMO p-5 d-flex flex-column justify-content-center align-items-center\r\n                                        position-relative\">\r\n                <FilterPanel />\r\n                <ErrorContainer>\r\n                        <CardWrapper />\r\n                        <PaginationWrapper />\r\n                </ErrorContainer>\r\n            </Container>\r\n\r\n            <PopupContainer />\r\n        </>\r\n    )\r\n};\r\n","import { reducers, initialState, IState, downloadData, TActions } from './reducers';\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { default as thunk, ThunkMiddleware } from 'redux-thunk';\r\nimport { dispatchThunk } from './thunk';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nexport const store = createStore(rootReducer, {}, applyMiddleware(thunk as ThunkMiddleware<IState, TActions>));\r\n\r\ndispatchThunk({ dispatch: store.dispatch, callback: downloadData });\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport { initialState };\r\nexport type { IState };\r\n","import { default as ReactDOM } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { App } from './components';\r\nimport { store } from './store';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}